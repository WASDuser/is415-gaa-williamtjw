[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Geospatial Analytics and Applications (GAA)",
    "section": "",
    "text": "This is website contains my notes, ICEs, assignments for GAA. Enjoy."
  },
  {
    "objectID": "resources/Take-home_Ex/ex2/Take-home_Ex_2.html",
    "href": "resources/Take-home_Ex/ex2/Take-home_Ex_2.html",
    "title": "Take-Home Exercise 2: Application of Geospatial Analysis Methods to Discover Thailand Drug Abuse at the Province Level",
    "section": "",
    "text": "Nothing for now."
  },
  {
    "objectID": "resources/Take-home_Ex/ex2/Take-home_Ex_2.html#aggregating-by-province",
    "href": "resources/Take-home_Ex/ex2/Take-home_Ex_2.html#aggregating-by-province",
    "title": "Take-Home Exercise 2: Application of Geospatial Analysis Methods to Discover Thailand Drug Abuse at the Province Level",
    "section": "Aggregating by Province",
    "text": "Aggregating by Province\n\nRelational Join\n\nset.seed(69)\n\n\nprovince_drug_offences &lt;- thai_drug_offences_sf %&gt;% \n  group_by(province_en) %&gt;%\n  summarize(total_cases = sum(no_cases), .groups = 'drop')\nhead(province_drug_offences)\n\n\ncombined_prepped_drug_offences_ &lt;- left_join(province_drug_offences, thai_admin1_sf,by = c('province_en'='ADM1_EN')) %&gt;% st_as_sf()\nglimpse(combined_prepped_drug_offences_)\n\n\ntmap_mode('plot')\n\ntm_shape(combined_prepped_drug_offences_)+\n  tm_polygons() +\n  tm_fill(alpha = .5,col = combined_prepped_drug_offences_$total_cases)\n  tm_text(combined_prepped_drug_offences_$province_en)\n\n\n\nLandmine\nThis is where I encountered the first landmine of sorts. The above code results in:\nError in `$&lt;-`:\n! Assigned data `as.numeric(...)` must be compatible with existing data.\n✖ Existing data has 77 rows.\n✖ Assigned data has 75 rows.\nℹ Only vectors of size 1 are recycled.\nCaused by error in `vectbl_recycle_rhs_rows()`:\n! Can't recycle input of size 75 to size 77.\nSo I went to re-check the left-joined table prepped_drug_offences . I realised for the “buogkan” and “Loburi” rows, besides the ‘total_cases’ field, the rest of the fields were empty.\nSeeing how suspiciously “buogkan” looks like a typo, I went to Google both “buogkan” and “Loburi” along with Thailand. Sure enough, the suggested words of “buogkan” and “Loburi” turned out to be “Bueng Kan” and “Lop buri” respectively.\nTurned out the Thailand Drug Offenses had the 2 erroneous province names, while the shapefiles’ province labels checked out.\nI will have to do manual replacements for all affected fields in thai_drug_offences_sf\n\n\nFixing Mispelled Province Names\nCheck before\n\nunique(thai_drug_offences_sf$province_en)[6]\n\n[1] \"Loburi\"\n\nunique(thai_drug_offences_sf$province_en)[30]\n\n[1] \"buogkan\"\n\n\nRename and Standardise Case\n\nthai_drug_offences_sf$province_en[which(thai_drug_offences_sf$province_en == \"Loburi\")] &lt;- 'Lop buri'\nthai_drug_offences_sf$province_en[which(thai_drug_offences_sf$province_en == \"buogkan\")] &lt;- 'Bueng Kan'\n\nthai_drug_offences_sf &lt;- thai_drug_offences_sf %&gt;% mutate(province_en = toupper(province_en))\n\nCheck fix\n\nunique(thai_drug_offences_sf$province_en)[6]\n\n[1] \"LOP BURI\"\n\nunique(thai_drug_offences_sf$province_en)[30]\n\n[1] \"BUENG KAN\"\n\n\nThat should resolve the landmine.\nSeparating suspected cases using grepl()\n\n# suspected\nsuspected_offenses_sf &lt;- thai_drug_offences_sf %&gt;% filter(grepl(\"suspects\", types_of_drug_offenses))\n\n\n# actual\noffenses_sf &lt;- thai_drug_offences_sf %&gt;% filter(!grepl(\"suspects\", types_of_drug_offenses)) \n\nI split thai_drug_offences_sf into confirmed cases (offenses_sf) and suspected cases(suspected_offenses_sf), because including suspected cases may skew the overall analysis results, adding noise and uncertainty to confirmed drug abuse activity. Splitting allows for separate modelling of suspected cases, which can value-add to the detection of drug abuse in areas of concern.\n\n\n[Again] Relational Join\n\n# actual\ncombined_offenses_sf &lt;- left_join(\n  (\n    offenses_sf %&gt;% \n      group_by(province_en) %&gt;%\n      summarize(total_cases = sum(no_cases), .groups = 'drop')),\n  \n    thai_admin1_sf,\n  \n  by = c('province_en'='ADM1_EN')) %&gt;% \n  st_as_sf()\n\nstr(combined_offenses_sf)\n\n\n# suspected\ncombined_suspected_offenses_sf &lt;- left_join(\n  (\n    suspected_offenses_sf %&gt;% \n      mutate(province_en = toupper(province_en)) %&gt;%\n      group_by(province_en) %&gt;%\n      summarize(total_cases = sum(no_cases), .groups = 'drop')),\n  \n  (\n    thai_admin1_sf %&gt;% \n      mutate(\n        ADM1_EN = toupper(ADM1_EN),\n        ADM1_PCODE = substr(ADM1_PCODE, 3, nchar(ADM1_PCODE)))),\n  \n  by = c('province_en'='ADM1_EN')) %&gt;% \n  st_as_sf()\n\nstr(combined_suspected_offenses_sf)\n\n\n\nDistribution of no_cases\n\nBig PictureAggregated Cases by Province across 2017-2022\n\n\nOverall Visualisations\n\n\nCode\nbasemap &lt;- tm_shape(combined_offenses_sf) + tm_polygons() + tm_text(\"ADM1_PCODE\",size = 0.4)\noffenses &lt;- qtm(combined_offenses_sf,\"total_cases\",title = 'confirmed offenses')\nsuspects &lt;- qtm(combined_suspected_offenses_sf,\"total_cases\", title = 'suspected offenses')\ntmap_arrange(suspects, basemap, offenses, asp=1, ncol=3)\n\n\n\n\n\n\n\n\n\nOverall Distribution\n\nActual\n\n\nCode\npar(mfrow=c(1,2))\nplot(offenses_sf$no_cases)\nplot(fitdist(offenses_sf$no_cases, 'norm'))\n\n\n\n\n\n\n\n\n\n\n\n\nSuspected\n\n\nCode\nplot(suspected_offenses_sf$no_cases)\nplot(fitdist(suspected_offenses_sf$no_cases, 'norm'))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nActual\n\n\nCode\nplot(combined_offenses_sf$total_cases, )\nplot(fitdist(combined_offenses_sf$total_cases, 'norm'))\n\n\n\n\n\n\n\n\n\n\n\n\nSuspected\n\n\nCode\nplot(combined_suspected_offenses_sf$total_cases)\nplot(fitdist(combined_suspected_offenses_sf$total_cases, 'norm'))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConclusions: Right Skewed, heavy right tail, outliers present; Actual and Suspected cases follow the similar distribution\nHence, to visualise the continuous variable total_cases , lets experiment with:\n\nquantile\nlog10\norder\nheadtails\nlog10_pretty\ncont\n\n\n\n\n\nVisualise actual cases\n\nVisual styling\n\n\ntmap_mode('plot')\n\ntmap mode set to plotting\n\n\n\nstyle = “quantile”style = “log10”style = “order”style = ‘headtails’style = ‘log10_pretty’style = ‘cont’\n\n\n\n\nCode\noffenses_qt &lt;- tm_shape(combined_offenses_sf) +\n  tm_fill(\n    col = \"total_cases\",\n    palette = \"-RdYlGn\",\n    style = \"quantile\",    # Use quantiles to emphasize hotspots\n    border.col = \"white\",\n    lwd = 0.666,             # Adjust line width of province borders\n  ) +\n  tm_text(\n    \"ADM1_PCODE\",    # Province NUMERIC code\n    size = \"total_cases\",  # proportional symbols\n    col = \"black\",\n    # auto.placement = TRUE,\n    shadow = TRUE\n  ) +\n  \n  tm_borders(lwd = 0.666) +  # Border thickness\n  tm_compass(type=\"8star\", size = 1.666) +\n  tm_scale_bar(width = 0.156, position = c(\"right\", \"bottom\"))  +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  \n  tm_layout(\n    legend.outside = TRUE, \n    frame = FALSE,\n    main.title = \"Thailand Drug Offenses (2017-2022)\",\n    main.title.size = 0.666\n  ) +\n  tm_legend(position = c(\"right\", \"bottom\")) # Legend Position\n\nsuspected_qt &lt;- tm_shape(combined_suspected_offenses_sf) +\n  tm_fill(\n    col = \"total_cases\",\n    palette = \"-RdYlGn\",\n    style = \"quantile\",    # Use quantiles to emphasize hotspots\n    border.col = \"white\",\n    lwd = 0.666,             # Adjust line width of province borders\n  ) +\n  tm_text(\n    \"ADM1_PCODE\",    # Province NUMERIC code\n    size = \"total_cases\",  # proportional symbols\n    col = \"black\",\n    # auto.placement = TRUE,\n    shadow = TRUE\n  ) +\n  \n  tm_borders(lwd = 0.666) +  # Border thickness\n  tm_compass(type=\"8star\", size = 1.666) +\n  tm_scale_bar(width = 0.156, position = c(\"right\", \"bottom\"))  +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  \n  tm_layout(\n    legend.outside = TRUE, \n    frame = FALSE,\n    main.title = \"Thailand Drug Suspected Offenses (2017-2022)\",\n    main.title.size = 0.666\n  ) +\n  tm_legend(position = c(\"right\", \"bottom\")) # Legend Position\n\ntmap_arrange(offenses_qt, suspected_qt, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\noffenses_log &lt;- tm_shape(combined_offenses_sf) +\n  tm_fill(\n    col = \"total_cases\",\n    palette = \"-RdYlGn\",\n    style = \"log10\",    # Use quantiles to emphasize hotspots\n    border.col = \"white\",\n    lwd = 0.666,             # Adjust line width of province borders\n  ) +\n  tm_text(\n    \"ADM1_PCODE\",    # Province NUMERIC code\n    size = \"total_cases\",  # proportional symbols\n    col = \"black\",\n    # auto.placement = TRUE,\n    shadow = TRUE\n  ) +\n  \n  tm_borders(lwd = 0.666) +  # Border thickness\n  tm_compass(type=\"8star\", size = 1.666) +\n  tm_scale_bar(width = 0.156, position = c(\"right\", \"bottom\"))  +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  \n  tm_layout(\n    legend.outside = TRUE, \n    frame = FALSE,\n    main.title = \"Thailand Drug Offenses (2017-2022)\",\n    main.title.size = 1.0\n  ) +\n  tm_legend(position = c(\"right\", \"bottom\")) # Legend Position\n\nsuspected_log &lt;- tm_shape(combined_suspected_offenses_sf) +\n  tm_fill(\n    col = \"total_cases\",\n    palette = \"-RdYlGn\",\n    style = \"log10\",    # Use quantiles to emphasize hotspots\n    border.col = \"white\",\n    lwd = 0.666,             # Adjust line width of province borders\n  ) +\n  tm_text(\n    \"ADM1_PCODE\",    # Province NUMERIC code\n    size = \"total_cases\",  # proportional symbols\n    col = \"black\",\n    # auto.placement = TRUE,\n    shadow = TRUE\n  ) +\n  \n  tm_borders(lwd = 0.666) +  # Border thickness\n  tm_compass(type=\"8star\", size = 1.666) +\n  tm_scale_bar(width = 0.156, position = c(\"right\", \"bottom\"))  +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  \n  tm_layout(\n    legend.outside = TRUE, \n    frame = FALSE,\n    main.title = \"Thailand Drug Suspected Offenses (2017-2022)\",\n    main.title.size = 1.0\n  ) +\n  tm_legend(position = c(\"right\", \"bottom\")) # Legend Position\n\ntmap_arrange(offenses_log, suspected_log, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\noffenses_odr &lt;- tm_shape(combined_offenses_sf) +\n  tm_fill(\n    col = \"total_cases\",\n    palette = \"-RdYlGn\",\n    style = \"order\",    # Use quantiles to emphasize hotspots\n    border.col = \"white\",\n    lwd = 0.666,             # Adjust line width of province borders\n  ) +\n  tm_text(\n    \"ADM1_PCODE\",    # Province NUMERIC code\n    size = \"total_cases\",  # proportional symbols\n    col = \"black\",\n    # auto.placement = TRUE,\n    shadow = TRUE\n  ) +\n  \n  tm_borders(lwd = 0.666) +  # Border thickness\n  tm_compass(type=\"8star\", size = 1.666) +\n  tm_scale_bar(width = 0.156, position = c(\"right\", \"bottom\"))  +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  \n  tm_layout(\n    legend.outside = TRUE, \n    frame = FALSE,\n    main.title = \"Thailand Drug Offenses (2017-2022)\",\n    main.title.size = 1.0\n  ) +\n  tm_legend(position = c(\"right\", \"bottom\")) # Legend Position\n\nsuspected_odr &lt;- tm_shape(combined_suspected_offenses_sf) +\n  tm_fill(\n    col = \"total_cases\",\n    palette = \"-RdYlGn\",\n    style = \"order\",    # Use quantiles to emphasize hotspots\n    border.col = \"white\",\n    lwd = 0.666,             # Adjust line width of province borders\n  ) +\n  tm_text(\n    \"ADM1_PCODE\",    # Province NUMERIC code\n    size = \"total_cases\",  # proportional symbols\n    col = \"black\",\n    # auto.placement = TRUE,\n    shadow = TRUE\n  ) +\n  \n  tm_borders(lwd = 0.666) +  # Border thickness\n  tm_compass(type=\"8star\", size = 1.666) +\n  tm_scale_bar(width = 0.156, position = c(\"right\", \"bottom\"))  +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  \n  tm_layout(\n    legend.outside = TRUE, \n    frame = FALSE,\n    main.title = \"Thailand Drug Suspected Offenses (2017-2022)\",\n    main.title.size = 1.0\n  ) +\n  tm_legend(position = c(\"right\", \"bottom\")) # Legend Position\n\ntmap_arrange(offenses_odr, suspected_odr, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\noffenses_ht &lt;- tm_shape(combined_offenses_sf) +\n  tm_fill(\n    col = \"total_cases\",\n    palette = \"-RdYlGn\",\n    style = \"headtails\",    # Use quantiles to emphasize hotspots\n    border.col = \"white\",\n    lwd = 0.666,             # Adjust line width of province borders\n  ) +\n  tm_text(\n    \"ADM1_PCODE\",    # Province NUMERIC code\n    size = \"total_cases\",  # proportional symbols\n    col = \"black\",\n    # auto.placement = TRUE,\n    shadow = TRUE\n  ) +\n  \n  tm_borders(lwd = 0.666) +  # Border thickness\n  tm_compass(type=\"8star\", size = 1.666) +\n  tm_scale_bar(width = 0.156, position = c(\"right\", \"bottom\"))  +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  \n  tm_layout(\n    legend.outside = TRUE, \n    frame = FALSE,\n    main.title = \"Thailand Drug Offenses (2017-2022)\",\n    main.title.size = 1.0\n  ) +\n  tm_legend(position = c(\"right\", \"bottom\")) # Legend Position\n\nsuspected_ht &lt;- tm_shape(combined_suspected_offenses_sf) +\n  tm_fill(\n    col = \"total_cases\",\n    palette = \"-RdYlGn\",\n    style = \"headtails\",    # Use quantiles to emphasize hotspots\n    border.col = \"white\",\n    lwd = 0.666,             # Adjust line width of province borders\n  ) +\n  tm_text(\n    \"ADM1_PCODE\",    # Province NUMERIC code\n    size = \"total_cases\",  # proportional symbols\n    col = \"black\",\n    # auto.placement = TRUE,\n    shadow = TRUE\n  ) +\n  \n  tm_borders(lwd = 0.666) +  # Border thickness\n  tm_compass(type=\"8star\", size = 1.666) +\n  tm_scale_bar(width = 0.156, position = c(\"right\", \"bottom\"))  +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  \n  tm_layout(\n    legend.outside = TRUE, \n    frame = FALSE,\n    main.title = \"Thailand Drug Suspected Offenses (2017-2022)\",\n    main.title.size = 1.0\n  ) +\n  tm_legend(position = c(\"right\", \"bottom\")) # Legend Position\n\ntmap_arrange(offenses_ht, suspected_ht, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\noffenses_lgprty &lt;- tm_shape(combined_offenses_sf) +\n  tm_fill(\n    col = \"total_cases\",\n    palette = \"-RdYlGn\",\n    style = \"log10_pretty\",    # Use quantiles to emphasize hotspots\n    border.col = \"white\",\n    lwd = 0.666,             # Adjust line width of province borders\n  ) +\n  tm_text(\n    \"ADM1_PCODE\",    # Province NUMERIC code\n    size = \"total_cases\",  # proportional symbols\n    col = \"black\",\n    # auto.placement = TRUE,\n    shadow = TRUE\n  ) +\n  \n  tm_borders(lwd = 0.666) +  # Border thickness\n  tm_compass(type=\"8star\", size = 1.666) +\n  tm_scale_bar(width = 0.156, position = c(\"right\", \"bottom\"))  +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  \n  tm_layout(\n    legend.outside = TRUE, \n    frame = FALSE,\n    main.title = \"Thailand Drug Offenses (2017-2022)\",\n    main.title.size = 1.0\n  ) +\n  tm_legend(position = c(\"right\", \"bottom\")) # Legend Position\n\nsuspected_lgprty &lt;- tm_shape(combined_suspected_offenses_sf) +\n  tm_fill(\n    col = \"total_cases\",\n    palette = \"-RdYlGn\",\n    style = \"log10_pretty\",    # Use quantiles to emphasize hotspots\n    border.col = \"white\",\n    lwd = 0.666,             # Adjust line width of province borders\n  ) +\n  tm_text(\n    \"ADM1_PCODE\",    # Province NUMERIC code\n    size = \"total_cases\",  # proportional symbols\n    col = \"black\",\n    # auto.placement = TRUE,\n    shadow = TRUE\n  ) +\n  \n  tm_borders(lwd = 0.666) +  # Border thickness\n  tm_compass(type=\"8star\", size = 1.666) +\n  tm_scale_bar(width = 0.156, position = c(\"right\", \"bottom\"))  +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  \n  tm_layout(\n    legend.outside = TRUE, \n    frame = FALSE,\n    main.title = \"Thailand Drug Suspected Offenses (2017-2022)\",\n    main.title.size = 1.0\n  ) +\n  tm_legend(position = c(\"right\", \"bottom\")) # Legend Position\n\ntmap_arrange(offenses_lgprty, suspected_lgprty, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\noffenses_cont &lt;- tm_shape(combined_offenses_sf) +\n  tm_fill(\n    col = \"total_cases\",\n    palette = \"-RdYlGn\",\n    style = \"cont\",    # Use quantiles to emphasize hotspots\n    border.col = \"white\",\n    lwd = 0.666,             # Adjust line width of province borders\n  ) +\n  tm_text(\n    \"ADM1_PCODE\",    # Province NUMERIC code\n    size = \"total_cases\",  # proportional symbols\n    col = \"black\",\n    # auto.placement = TRUE,\n    shadow = TRUE\n  ) +\n  \n  tm_borders(lwd = 0.666) +  # Border thickness\n  tm_compass(type=\"8star\", size = 1.666) +\n  tm_scale_bar(width = 0.156, position = c(\"right\", \"bottom\"))  +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  \n  tm_layout(\n    legend.outside = TRUE, \n    frame = FALSE,\n    main.title = \"Thailand Drug Offenses (2017-2022)\",\n    main.title.size = 1.0\n  ) +\n  tm_legend(position = c(\"right\", \"bottom\")) # Legend Position\n\nsuspected_cont &lt;- tm_shape(combined_suspected_offenses_sf) +\n  tm_fill(\n    col = \"total_cases\",\n    palette = \"-RdYlGn\",\n    style = \"cont\",    # Use quantiles to emphasize hotspots\n    border.col = \"white\",\n    lwd = 0.666,             # Adjust line width of province borders\n  ) +\n  tm_text(\n    \"ADM1_PCODE\",    # Province NUMERIC code\n    size = \"total_cases\",  # proportional symbols\n    col = \"black\",\n    # auto.placement = TRUE,\n    shadow = TRUE\n  ) +\n  \n  tm_borders(lwd = 0.666) +  # Border thickness\n  tm_compass(type=\"8star\", size = 1.666) +\n  tm_scale_bar(width = 0.156, position = c(\"right\", \"bottom\"))  +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  \n  tm_layout(\n    legend.outside = TRUE, \n    frame = FALSE,\n    main.title = \"Thailand Drug Suspected Offenses (2017-2022)\",\n    main.title.size = 1.0\n  ) +\n  tm_legend(position = c(\"right\", \"bottom\")) # Legend Position\n\ntmap_arrange(offenses_cont, suspected_cont, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n'log10' style had the best visualisation of the distribution drug offenses in terms of contrast between ‘hot’ and ‘cold’ spots and overall aesthetics."
  },
  {
    "objectID": "resources/Take-home_Ex/ex2/Take-home_Ex_2.html#aggregating-by-time-province-same-as-on-profs-site",
    "href": "resources/Take-home_Ex/ex2/Take-home_Ex_2.html#aggregating-by-time-province-same-as-on-profs-site",
    "title": "Take-Home Exercise 2: Application of Geospatial Analysis Methods to Discover Thailand Drug Abuse at the Province Level",
    "section": "Aggregating by Time & Province (Same as on Prof’s site)",
    "text": "Aggregating by Time & Province (Same as on Prof’s site)\n\nRelational Join\n\noffences_sf_joined &lt;- left_join(\n    (offenses_sf  %&gt;% group_by(fiscal_year)),\n    thai_admin1_sf,\n    by = c('province_en'='ADM1_EN')) %&gt;%\n    st_as_sf()\n\nsuspected_offenses_sf_joined &lt;- left_join(\n    (suspected_offenses_sf %&gt;% group_by(fiscal_year)),\n    thai_admin1_sf,\n    by = c('province_en'='ADM1_EN')) %&gt;%\n    st_as_sf()\n\n\n\nModify\n\noffences_sf_by_province_year &lt;- offences_sf_joined %&gt;% \n    group_by(fiscal_year,province_en,ADM1_PCODE, geometry) %&gt;%\n    summarise(total_cases = sum(no_cases, na.rm = TRUE), .groups = \"drop\")\n\nsuspected_offences_sf_by_province_year &lt;- suspected_offenses_sf_joined %&gt;% \n    group_by(fiscal_year,province_en,ADM1_PCODE, geometry) %&gt;%\n    summarise(total_cases = sum(no_cases, na.rm = TRUE), .groups = \"drop\")\n\n\n.groups = \"drop\" avoids creating unnecessary group structure\n\n\n\nCheck\n\nglimpse(offences_sf_by_province_year)\n\nRows: 462\nColumns: 5\n$ fiscal_year &lt;dbl&gt; 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017…\n$ province_en &lt;chr&gt; \"AMNAT CHAROEN\", \"ANG THONG\", \"BANGKOK\", \"BUENG KAN\", \"BUR…\n$ ADM1_PCODE  &lt;chr&gt; \"37\", \"15\", \"10\", \"38\", \"31\", \"24\", \"18\", \"36\", \"22\", \"50\"…\n$ geometry    &lt;MULTIPOLYGON [°]&gt; MULTIPOLYGON (((104.9598 16..., MULTIPOLYGON …\n$ total_cases &lt;dbl&gt; 2499, 748, 28747, 2070, 2411, 4566, 729, 3134, 1952, 7438,…\n\n\n\nglimpse(suspected_offences_sf_by_province_year)\n\nRows: 462\nColumns: 5\n$ fiscal_year &lt;dbl&gt; 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017…\n$ province_en &lt;chr&gt; \"AMNAT CHAROEN\", \"ANG THONG\", \"BANGKOK\", \"BUENG KAN\", \"BUR…\n$ ADM1_PCODE  &lt;chr&gt; \"37\", \"15\", \"10\", \"38\", \"31\", \"24\", \"18\", \"36\", \"22\", \"50\"…\n$ geometry    &lt;MULTIPOLYGON [°]&gt; MULTIPOLYGON (((104.9598 16..., MULTIPOLYGON …\n$ total_cases &lt;dbl&gt; 2577, 866, 31320, 2242, 2650, 4752, 807, 3301, 2069, 8182,…\n\n\n\n\nVisualise using tmap\nAs previously plotted, the distribution of drug offenses in Thailand (across time periods and within province areas) is characteristic of a right-skewed distribution or heavy-tailed distribution. Hence, a logarithmic scale or a Jenks Natural Breaks method would be suitable to handle the skewness and emphasize meaningful breaks in the data.\n\nLog\n\n\nCode\ntm_shape(offences_sf_by_province_year) +\n  tm_fill(\n    col = \"total_cases\",\n    palette = \"Blues\",       # Use a blue color palette similar to the image\n    style = \"log10\",      # Adjust based on the distribution of your data\n    n = 5,                   # Define number of bins for colors\n    title = \"Drug use cases\"\n  ) +\n  tm_borders() +\n  tm_facets(by = \"fiscal_year\", nrow = 2, ncol = 3) +  # Facet by year, 2 rows and 3 columns\n  tm_layout(\n    title = \"Drug use cases by year\",               # Title for the entire plot\n    legend.position = c(\"right\", \"bottom\"),         # Position the legend on the right\n    panel.label.size = 1.333,                         # Adjust the size of the year labels\n    legend.title.size = .666,                        # Customize the size of the legend title\n    legend.text.size = .666                          # Customize the size of the legend text\n  )\n\n\n\n\n\n\n\n\n\nCode\ntm_shape(suspected_offences_sf_by_province_year) +\n  tm_fill(\n    col = \"total_cases\",\n    palette = \"Blues\",       # Use a blue color palette similar to the image\n    style = \"log10\",      # Adjust based on the distribution of your data\n    n = 5,                   # Define number of bins for colors\n    title = \"Suspected Drug uses\"\n  ) +\n  tm_borders() +\n  tm_facets(by = \"fiscal_year\", nrow = 2, ncol = 3) +  # Facet by year, 2 rows and 3 columns\n  tm_layout(\n    title = \"Suspected Drug uses by year\",               # Title for the entire plot\n    legend.position = c(\"right\", \"bottom\"),         # Position the legend on the right\n    panel.label.size = 1.333,                         # Adjust the size of the year labels\n    legend.title.size = .666,                        # Customize the size of the legend title\n    legend.text.size = .666                          # Customize the size of the legend text\n  )\n\n\n\n\n\n\n\n\n\n\n\nJenks\n\n#| code-fold: true\n\ntm_shape(offences_sf_by_province_year) +\n  tm_fill(\n    col = \"total_cases\",\n    palette = \"Blues\",       # Use a blue color palette similar to the image\n    style = \"jenks\",      # Adjust based on the distribution of your data\n    n = 5,                   # Define number of bins for colors\n    title = \"Drug use cases\"\n  ) +\n  tm_borders() +\n  tm_facets(by = \"fiscal_year\", nrow = 2, ncol = 3) +  # Facet by year, 2 rows and 3 columns\n  tm_layout(\n    title = \"Drug use cases by year\",               # Title for the entire plot\n    legend.position = c(\"right\", \"bottom\"),         # Position the legend on the right\n    panel.label.size = 1.333,                         # Adjust the size of the year labels\n    legend.title.size = .666,                        # Customize the size of the legend title\n    legend.text.size = .666                          # Customize the size of the legend text\n  )\n\n\n\n\n\n\n\ntm_shape(suspected_offences_sf_by_province_year) +\n  tm_fill(\n    col = \"total_cases\",\n    palette = \"Blues\",       # Use a blue color palette similar to the image\n    style = \"jenks\",      # Adjust based on the distribution of your data\n    n = 5,                   # Define number of bins for colors\n    title = \"Suspected Drug uses\"\n  ) +\n  tm_borders() +\n  tm_facets(by = \"fiscal_year\", nrow = 2, ncol = 3) +  # Facet by year, 2 rows and 3 columns\n  tm_layout(\n    title = \"Suspected Drug uses by year\",               # Title for the entire plot\n    legend.position = c(\"right\", \"bottom\"),         # Position the legend on the right\n    panel.label.size = 1.333,                         # Adjust the size of the year labels\n    legend.title.size = .666,                        # Customize the size of the legend title\n    legend.text.size = .666                          # Customize the size of the legend text\n  )\n\n\n\n\n\n\n\n\n\nJenks has better contrast between hot and cold spots overall compared to the logarithmic method"
  },
  {
    "objectID": "resources/Take-home_Ex/ex2/Take-home_Ex_2.html#global-morans-i-with-permutation-testing",
    "href": "resources/Take-home_Ex/ex2/Take-home_Ex_2.html#global-morans-i-with-permutation-testing",
    "title": "Take-Home Exercise 2: Application of Geospatial Analysis Methods to Discover Thailand Drug Abuse at the Province Level",
    "section": "Global Moran’s I with permutation testing",
    "text": "Global Moran’s I with permutation testing\n\ndrug_usepossessionpossession_with_intent_to_distributetraffickingproductionimportexportconspiracy\n\n\n\n\nCode\ndrug_use_cases &lt;- drug_use %&gt;% dplyr::select(1,3)\n\npar(mfrow=c(2,3))\nfor (year in yr){\n  mi_perm &lt;- global_moran_perm(\n    drug_use_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2),\n    nb,\n    wm_q$wt,\n    nsim = 99)\n\n  print(paste(year, \"statistic:\",round(mi_perm$statistic,4)))\n  \n  hist(mi_perm$res, freq=TRUE, breaks=20, xlab=paste(\"Simulated Moran's I\"), main=paste(\"Histogram for\", year))\n  abline(v=mi_perm$statistic,col=\"red\")\n}\n\n\n[1] \"2017 statistic: 0.0822\"\n\n\n[1] \"2018 statistic: 0.0952\"\n\n\n[1] \"2019 statistic: 0.141\"\n\n\n[1] \"2020 statistic: -0.0227\"\n\n\n[1] \"2021 statistic: 0.1816\"\n\n\n[1] \"2022 statistic: -0.0744\"\n\n\n\n\n\n\n\n\n\nWith the exception of 2020 and 2022, the observed Moran’s I is positive and significantly larger than the most of the Moran’s I values in the simulated distribution, which suggests clustering, meaning areas with high cases tend to be near other areas with high cases.\n\n\n\n\nCode\npossession_cases &lt;- possession %&gt;% dplyr::select(1,3)\n\npar(mfrow=c(2,3))\nfor (year in yr){\n  mi_perm &lt;- global_moran_perm(\n    possession_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2),\n    nb,\n    wm_q$wt,\n    nsim = 99)\n  \n  print(paste(year, \"statistic:\",round(mi_perm$statistic,4)))\n  \n  hist(mi_perm$res, freq=TRUE, breaks=20, xlab=paste(\"Simulated Moran's I\"), main=paste(\"Histogram for\", year))\n  abline(v=mi_perm$statistic,col=\"red\")\n}\n\n\n[1] \"2017 statistic: 0.3132\"\n\n\n[1] \"2018 statistic: 0.2765\"\n\n\n[1] \"2019 statistic: 0.3724\"\n\n\n[1] \"2020 statistic: 0.3694\"\n\n\n[1] \"2021 statistic: 0.1969\"\n\n\n[1] \"2022 statistic: -0.0827\"\n\n\n\n\n\n\n\n\n\nWith the exception of 2022, the observed Moran’s I is greatly positive and significantly larger than the most of the Moran’s I values in the simulated distribution, which suggests strong clustering, meaning areas with high cases tend to be near other areas with high cases.\n\n\n\n\nCode\npossession_with_intent_to_distribute_cases &lt;- possession_with_intent_to_distribute %&gt;% dplyr::select(1,3)\n\npar(mfrow=c(2,3))\nfor (year in yr){\n  mi_perm &lt;- global_moran_perm(\n    possession_with_intent_to_distribute_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2),\n    nb,\n    wm_q$wt,\n    nsim = 99)\n  \n  print(paste(year, \"statistic:\",round(mi_perm$statistic,4)))\n  \n  hist(mi_perm$res, freq=TRUE, breaks=20, xlab=paste(\"Simulated Moran's I\"), main=paste(\"Histogram for\", year))\n  abline(v=mi_perm$statistic,col=\"red\")\n}\n\n\n[1] \"2017 statistic: 0.1581\"\n\n\n[1] \"2018 statistic: 0.1801\"\n\n\n[1] \"2019 statistic: 0.163\"\n\n\n[1] \"2020 statistic: 0.1161\"\n\n\n[1] \"2021 statistic: 0.1722\"\n\n\n[1] \"2022 statistic: -0.0264\"\n\n\n\n\n\n\n\n\n\nWith the exception of 2022, the observed Moran’s I is greatly positive and significantly larger than the most of the Moran’s I values in the simulated distribution, which suggests strong clustering, meaning areas with high cases tend to be near other areas with high cases.\n\n\n\n\nCode\ntrafficking_cases &lt;- trafficking %&gt;% dplyr::select(1,3)\n\npar(mfrow=c(2,3))\nfor (year in yr){\n  mi_perm &lt;- global_moran_perm(\n    trafficking_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2),\n    nb,\n    wm_q$wt,\n    nsim = 99)\n  \n  print(paste(year, \"statistic:\",round(mi_perm$statistic,4)))\n  \n  hist(mi_perm$res, freq=TRUE, breaks=20, xlab=paste(\"Simulated Moran's I\"), main=paste(\"Histogram for\", year))\n  abline(v=mi_perm$statistic,col=\"red\")\n}\n\n\n[1] \"2017 statistic: 0.123\"\n\n\n[1] \"2018 statistic: 0.1232\"\n\n\n[1] \"2019 statistic: 0.1876\"\n\n\n[1] \"2020 statistic: 0.0776\"\n\n\n[1] \"2021 statistic: 0.0597\"\n\n\n[1] \"2022 statistic: -0.064\"\n\n\n\n\n\n\n\n\n\nWith the exception of 2022, the observed Moran’s I is positive and significantly larger than the most of the Moran’s I values in the simulated distribution, which suggests clustering, meaning areas with high cases tend to be near other areas with high cases.\n\n\n\n\nCode\nproduction_cases &lt;- production %&gt;% dplyr::select(1,3)\n\npar(mfrow=c(2,3))\nfor (year in yr){\n  mi_perm &lt;- global_moran_perm(\n    production_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2),\n    nb,\n    wm_q$wt,\n    nsim = 99)\n  \n  print(paste(year, \"statistic:\",round(mi_perm$statistic,4)))\n  \n  hist(mi_perm$res, freq=TRUE, breaks=20, xlab=paste(\"Simulated Moran's I\"), main=paste(\"Histogram for\", year))\n  abline(v=mi_perm$statistic,col=\"red\")\n}\n\n\n[1] \"2017 statistic: 0.5561\"\n\n\n[1] \"2018 statistic: 0.51\"\n\n\n[1] \"2019 statistic: 0.3899\"\n\n\n[1] \"2020 statistic: 0.2683\"\n\n\n[1] \"2021 statistic: 0.421\"\n\n\n[1] \"2022 statistic: 0.0211\"\n\n\n\n\n\n\n\n\n\nWith the exception of 2022, the observed Moran’s I is greatly positive and significantly larger than the most of the Moran’s I values in the simulated distribution, which suggests strong clustering, meaning areas with high cases tend to be near other areas with high cases.\n\n\n\n\nCode\nimport_cases &lt;- import %&gt;% dplyr::select(1,3)\n\npar(mfrow=c(2,3))\nfor (year in yr){\n  mi_perm &lt;- global_moran_perm(\n    import_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2),\n    nb,\n    wm_q$wt,\n    nsim = 99)\n  \n  print(paste(year, \"statistic:\",round(mi_perm$statistic,4)))\n  \n  hist(mi_perm$res, freq=TRUE, breaks=20, xlab=paste(\"Simulated Moran's I\"), main=paste(\"Histogram for\", year))\n  abline(v=mi_perm$statistic,col=\"red\")\n}\n\n\n[1] \"2017 statistic: 0.2107\"\n\n\n[1] \"2018 statistic: 0.2143\"\n\n\n[1] \"2019 statistic: 0.1895\"\n\n\n[1] \"2020 statistic: 0.1309\"\n\n\n[1] \"2021 statistic: 0.0972\"\n\n\n[1] \"2022 statistic: -0.0598\"\n\n\n\n\n\n\n\n\n\nWith the exception of 2022, the observed Moran’s I is greatly positive and significantly larger than the most of the Moran’s I values in the simulated distribution, which suggests strong clustering, meaning areas with high cases tend to be near other areas with high cases.\n\n\n\n\nCode\nexport_cases &lt;- export %&gt;% dplyr::select(1,3)\n\npar(mfrow=c(2,3))\nfor (year in yr){\n  mi_perm &lt;- global_moran_perm(\n    export_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2),\n    nb,\n    wm_q$wt,\n    nsim = 99)\n  \n  print(paste(year, \"statistic:\",round(mi_perm$statistic,4)))\n  \n  hist(mi_perm$res, freq=TRUE, breaks=20, xlab=paste(\"Simulated Moran's I\"), main=paste(\"Histogram for\", year))\n  abline(v=mi_perm$statistic,col=\"red\")\n}\n\n\n[1] \"2017 statistic: -0.0502\"\n\n\n[1] \"2018 statistic: 0.0076\"\n\n\n[1] \"2019 statistic: 0.0792\"\n\n\n[1] \"2020 statistic: -0.0668\"\n\n\n[1] \"2021 statistic: -0.071\"\n\n\n[1] \"2022 statistic: -0.0208\"\n\n\n\n\n\n\n\n\n\nThis had an unusual pattern compared to the rest. With the exception of 2018 and 2019, the observed Moran’s I is negative and smaller than the most of the Moran’s I values in the simulated distribution, which suggests a more dispersed, checkerboard spatial pattern, where high and low number of cases alternate spatially.\n\n\n\nHad to account for the years with 0 cases\n\n\n\nCode\nconspiracy_cases &lt;- conspiracy %&gt;% dplyr::select(1,3)\n\npar(mfrow=c(2,3))\nfor (year in yr){\n  cases = conspiracy_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2)\n  mi_perm &lt;- global_moran_perm(\n    # x = integer(nrow(wm_q)),\n    cases,\n    nb,\n    wm_q$wt,\n    nsim = 99)\n  \n  # debugging\n  # print(year)\n  # print(cases)\n\n  # checks if the year's vector has no_case = 0\n  if (sum(cases)==0) {\n    message(paste(\"Skipping year\", year, \"due to empty data (0 cases)\"))\n    next  # continue to next iteration\n  }\n  \n  print(paste(year, \"statistic:\",round(mi_perm$statistic,4)))\n\n  hist(mi_perm$res, freq=TRUE, breaks=20, xlab=paste(\"Simulated Moran's I\"), main=paste(\"Histogram for\", year))\n  abline(v=mi_perm$statistic,col=\"red\")\n}\n\n\n[1] \"2017 statistic: 0.1216\"\n\n\n[1] \"2018 statistic: 0.207\"\n\n\n[1] \"2019 statistic: 0.0162\"\n\n\n[1] \"2020 statistic: 0.0168\"\n\n\nSkipping year 2021 due to empty data (0 cases)\n\n\nSkipping year 2022 due to empty data (0 cases)\n\n\n\n\n\n\n\n\n\nThe observed Moran’s I is positive and significantly larger than the most of the Moran’s I values in the simulated distribution, which suggests clustering, meaning areas with high cases tend to be near other areas with high cases."
  },
  {
    "objectID": "resources/Take-home_Ex/ex2/Take-home_Ex_2.html#gearys-c",
    "href": "resources/Take-home_Ex/ex2/Take-home_Ex_2.html#gearys-c",
    "title": "Take-Home Exercise 2: Application of Geospatial Analysis Methods to Discover Thailand Drug Abuse at the Province Level",
    "section": "Geary’s C",
    "text": "Geary’s C\n\ndrug_usepossessionpossession_with_intent_to_distributetraffickingproductionimportexportconspiracy\n\n\n\n\nCode\nset.seed(69)\npar(mfrow=c(2,3))\nfor (year in yr){\n  gc_perm &lt;- global_c_perm(\n    drug_use_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2),\n    nb,\n    wm_q$wt,\n    nsim = 99)\n  \n  print(paste(year, \"statistic:\",round(gc_perm$statistic,4)))\n  \n  hist(gc_perm$res, freq=TRUE, breaks=20, xlab=paste(\"Simulated Geary's C\"), main=paste(\"Histogram for\", year))\n  abline(v=gc_perm$statistic,col=\"red\")\n}\n\n\n[1] \"2017 statistic: 1.0258\"\n\n\n[1] \"2018 statistic: 1.0037\"\n\n\n[1] \"2019 statistic: 0.9167\"\n\n\n[1] \"2020 statistic: 1.14\"\n\n\n[1] \"2021 statistic: 0.7809\"\n\n\n[1] \"2022 statistic: 1.0367\"\n\n\n\n\n\n\n\n\n\nC &lt; 1 for 2019, 2021: stronger positive spatial autocorrelation (cases of similar values group together spatially)\nC ~ 1 for 2017, 2018: no significant spatial autocorrelation (case values are randomly distributed spatially)\nC &gt; 1 for 2020, 2022: stronger negative spatial autocorrelation (cases of dissimilar values group together spatially)\n\n\n\n\nCode\npar(mfrow=c(2,3))\nfor (year in yr){\n  gc_perm &lt;- global_c_perm(\n    possession_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2),\n    nb,\n    wm_q$wt,\n    nsim = 99)\n    \n  print(paste(year, \"statistic:\",round(gc_perm$statistic,4)))\n  \n  hist(gc_perm$res, freq=TRUE, breaks=20, xlab=paste(\"Simulated Geary's C\"), main=paste(\"Histogram for\", year))\n  abline(v=gc_perm$statistic,col=\"red\")\n}\n\n\n[1] \"2017 statistic: 0.7603\"\n\n\n[1] \"2018 statistic: 0.8117\"\n\n\n[1] \"2019 statistic: 0.6932\"\n\n\n[1] \"2020 statistic: 0.7879\"\n\n\n[1] \"2021 statistic: 0.7613\"\n\n\n[1] \"2022 statistic: 1.0432\"\n\n\n\n\n\n\n\n\n\nC &lt; 1 for 2017, 2018, 2019, 2020, 2021: stronger positive spatial autocorrelation (cases of similar values group together spatially)\nC &gt; 1 for 2022: stronger negative spatial autocorrelation (cases of dissimilar values group together spatially)\n\n\n\n\nCode\npar(mfrow=c(2,3))\nfor (year in yr){\n  gc_perm &lt;- global_c_perm(\n    possession_with_intent_to_distribute_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2),\n    nb,\n    wm_q$wt,\n    nsim = 99)\n    \n  print(paste(year, \"statistic:\",round(gc_perm$statistic,4)))\n  \n  hist(gc_perm$res, freq=TRUE, breaks=20, xlab=paste(\"Simulated Geary's C\"), main=paste(\"Histogram for\", year))\n  abline(v=gc_perm$statistic,col=\"red\")\n}\n\n\n[1] \"2017 statistic: 0.9771\"\n\n\n[1] \"2018 statistic: 0.9372\"\n\n\n[1] \"2019 statistic: 0.9403\"\n\n\n[1] \"2020 statistic: 1.0417\"\n\n\n[1] \"2021 statistic: 0.7518\"\n\n\n[1] \"2022 statistic: 1.0646\"\n\n\n\n\n\n\n\n\n\nSame pattern as drug_use\n\n\n\n\nCode\npar(mfrow=c(2,3))\nfor (year in yr){\n  gc_perm &lt;- global_c_perm(\n    trafficking_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2),\n    nb,\n    wm_q$wt,\n    nsim = 99)\n    \n  print(paste(year, \"statistic:\",round(gc_perm$statistic,4)))\n  \n  hist(gc_perm$res, freq=TRUE, breaks=20, xlab=paste(\"Simulated Geary's C\"), main=paste(\"Histogram for\", year))\n  abline(v=gc_perm$statistic,col=\"red\")\n}\n\n\n[1] \"2017 statistic: 0.9121\"\n\n\n[1] \"2018 statistic: 0.8823\"\n\n\n[1] \"2019 statistic: 0.7766\"\n\n\n[1] \"2020 statistic: 0.9155\"\n\n\n[1] \"2021 statistic: 0.8283\"\n\n\n[1] \"2022 statistic: 1.0195\"\n\n\n\n\n\n\n\n\n\nSame pattern as possession\n\n\n\n\nCode\npar(mfrow=c(2,3))\nfor (year in yr){\n  gc_perm &lt;- global_c_perm(\n    production_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2),\n    nb,\n    wm_q$wt,\n    nsim = 99)\n    \n  print(paste(year, \"statistic:\",round(gc_perm$statistic,4)))\n  \n  hist(gc_perm$res, freq=TRUE, breaks=20, xlab=paste(\"Simulated Geary's C\"), main=paste(\"Histogram for\", year))\n  abline(v=gc_perm$statistic,col=\"red\")\n}\n\n\n[1] \"2017 statistic: 0.5471\"\n\n\n[1] \"2018 statistic: 0.5773\"\n\n\n[1] \"2019 statistic: 0.6932\"\n\n\n[1] \"2020 statistic: 0.7544\"\n\n\n[1] \"2021 statistic: 0.5693\"\n\n\n[1] \"2022 statistic: 0.9292\"\n\n\n\n\n\n\n\n\n\nC &lt; 1 for all years: strong positive spatial autocorrelation (cases of similar values group together spatially)\n\n\n\n\nCode\npar(mfrow=c(2,3))\nfor (year in yr){\n  gc_perm &lt;- global_c_perm(\n    import_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2),\n    nb,\n    wm_q$wt,\n    nsim = 99)\n    \n  print(paste(year, \"statistic:\",round(gc_perm$statistic,4)))\n  \n  hist(gc_perm$res, freq=TRUE, breaks=20, xlab=paste(\"Simulated Geary's C\"), main=paste(\"Histogram for\", year))\n  abline(v=gc_perm$statistic,col=\"red\")\n}\n\n\n[1] \"2017 statistic: 0.9166\"\n\n\n[1] \"2018 statistic: 0.7272\"\n\n\n[1] \"2019 statistic: 0.939\"\n\n\n[1] \"2020 statistic: 1.0753\"\n\n\n[1] \"2021 statistic: 1.0812\"\n\n\n[1] \"2022 statistic: 1.0938\"\n\n\n\n\n\n\n\n\n\nC &lt; 1 for 2017 to 2019: stronger positive spatial autocorrelation (cases of similar values group together spatially)\nC &gt; 1 for 2020 to 2022: stronger negative spatial autocorrelation (cases of dissimilar values group together spatially)\n\n\n\n\nCode\npar(mfrow=c(2,3))\nfor (year in yr){\n  gc_perm &lt;- global_c_perm(\n    export_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2),\n    nb,\n    wm_q$wt,\n    nsim = 99)\n    \n  print(paste(year, \"statistic:\",round(gc_perm$statistic,4)))\n  \n  hist(gc_perm$res, freq=TRUE, breaks=20, xlab=paste(\"Simulated Geary's C\"), main=paste(\"Histogram for\", year))\n  abline(v=gc_perm$statistic,col=\"red\")\n}\n\n\n[1] \"2017 statistic: 1.0594\"\n\n\n[1] \"2018 statistic: 0.9383\"\n\n\n[1] \"2019 statistic: 0.6677\"\n\n\n[1] \"2020 statistic: 1.0626\"\n\n\n[1] \"2021 statistic: 0.9808\"\n\n\n[1] \"2022 statistic: 1.0983\"\n\n\n\n\n\n\n\n\n\nC &lt; 1 for 2018, 2019: stronger positive spatial autocorrelation (cases of similar values group together spatially)\nC ~ 1 for 2021: no significant spatial autocorrelation (case values are randomly distributed spatially)\nC &gt; 1 for 2017, 2020, 2022: stronger negative spatial autocorrelation (cases of dissimilar values group together spatially)\n\n\n\nHad to account for the years with 0 cases\n\n\n\nCode\npar(mfrow=c(2,3))\nfor (year in yr){\n  cases = conspiracy_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2)\n  gc_perm &lt;- global_c_perm(\n    # x = integer(nrow(wm_q)),\n    cases,\n    nb,\n    wm_q$wt,\n    nsim = 99)\n  \n  # debugging\n  # print(year)\n  # print(cases)\n\n  # checks if the year's vector has no_case = 0\n  if (sum(cases)==0) {\n    message(paste(\"Skipping year\", year, \"due to empty data (0 cases)\"))\n    next  # continue to next iteration\n  }\n    \n  print(paste(year, \"statistic:\",round(gc_perm$statistic,4)))\n\n  hist(gc_perm$res, freq=TRUE, breaks=20, xlab=paste(\"Simulated Geary's C\"), main=paste(\"Histogram for\", year))\n  abline(v=gc_perm$statistic,col=\"red\")\n}\n\n\n[1] \"2017 statistic: 0.9139\"\n\n\n[1] \"2018 statistic: 0.852\"\n\n\n[1] \"2019 statistic: 1.1644\"\n\n\n[1] \"2020 statistic: 1.2466\"\n\n\nSkipping year 2021 due to empty data (0 cases)\n\n\nSkipping year 2022 due to empty data (0 cases)\n\n\n\n\n\n\n\n\n\nC &lt; 1 for 2017, 2018: stronger positive spatial autocorrelation (cases of similar values group together spatially)\nC &gt; 1 for 2019, 2020: stronger negative spatial autocorrelation (cases of dissimilar values group together spatially)"
  },
  {
    "objectID": "resources/Take-home_Ex/ex2/Take-home_Ex_2.html#spatial-correlogram",
    "href": "resources/Take-home_Ex/ex2/Take-home_Ex_2.html#spatial-correlogram",
    "title": "Take-Home Exercise 2: Application of Geospatial Analysis Methods to Discover Thailand Drug Abuse at the Province Level",
    "section": "Spatial Correlogram",
    "text": "Spatial Correlogram\n\nMoran’s I\n\ndrug usepossessionpossession with intent to distributetraffickingproductionimportexportconspiracy\n\n\n\n\nCode\npar(mfrow=c(2,3))\nfor (year in yr){\n  MI_corr &lt;- sp.correlogram(\n    nb,\n    drug_use_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2),\n    order = 6,\n    method=\"I\", \n    style=\"W\",\n    zero.policy = TRUE) # handle Phuket, an isolated province\n  plot(MI_corr, main = paste(year, \"drug_use_cases\"))\n  print(MI_corr)}\n\n\nSpatial correlogram for drug_use_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided\n1 (77)  0.0821634  -0.0131579  0.0036650           1.5745          0.1154\n2 (76)  0.0266710  -0.0133333  0.0022351           0.8462          0.3975\n3 (77) -0.0324661  -0.0131579  0.0017748          -0.4583          0.6467\n4 (77)  0.0156920  -0.0131579  0.0018770           0.6659          0.5055\n5 (77) -0.0599058  -0.0131579  0.0021004          -1.0200          0.3077\n6 (77) -0.0164010  -0.0131579  0.0029873          -0.0593          0.9527\n\n\nSpatial correlogram for drug_use_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided  \n1 (77)  0.0952025  -0.0131579  0.0039477           1.7246         0.08459 .\n2 (76)  0.0074005  -0.0133333  0.0024110           0.4223         0.67283  \n3 (77) -0.0114557  -0.0131579  0.0019106           0.0389         0.96894  \n4 (77)  0.0345456  -0.0131579  0.0020195           1.0615         0.28846  \n5 (77) -0.0693915  -0.0131579  0.0022563          -1.1839         0.23647  \n6 (77) -0.0250539  -0.0131579  0.0032047          -0.2101         0.83356  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for drug_use_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided  \n1 (77)  0.1410203  -0.0131579  0.0050350           2.1728         0.02979 *\n2 (76) -0.0225695  -0.0133333  0.0030875          -0.1662         0.86798  \n3 (77)  0.0020717  -0.0131579  0.0024333           0.3087         0.75752  \n4 (77)  0.0415944  -0.0131579  0.0025679           1.0805         0.27993  \n5 (77) -0.0673589  -0.0131579  0.0028562          -1.0142         0.31050  \n6 (77) -0.0191477  -0.0131579  0.0040411          -0.0942         0.92493  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for drug_use_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided\n1 (77) -0.0226885  -0.0131579  0.0053015          -0.1309          0.8959\n2 (76) -0.0176267  -0.0133333  0.0032532          -0.0753          0.9400\n3 (77)  0.0331893  -0.0131579  0.0025614           0.9158          0.3598\n4 (77) -0.0046441  -0.0131579  0.0027023           0.1638          0.8699\n5 (77) -0.0085435  -0.0131579  0.0030032           0.0842          0.9329\n6 (77) -0.0809329  -0.0131579  0.0042461          -1.0401          0.2983\n\n\nSpatial correlogram for drug_use_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided   \n1 (77)  0.1815510  -0.0131579  0.0057689           2.5635        0.010361 * \n2 (76)  0.0798288  -0.0133333  0.0035441           1.5649        0.117604   \n3 (77) -0.1156738  -0.0131579  0.0027860          -1.9422        0.052111 . \n4 (77)  0.1598054  -0.0131579  0.0029380           3.1910        0.001418 **\n5 (77) -0.1386056  -0.0131579  0.0032611          -2.1968        0.028038 * \n6 (77) -0.2031245  -0.0131579  0.0046057          -2.7992        0.005123 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\n\n\n\nSpatial correlogram for drug_use_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided\n1 (77) -0.0743724  -0.0131579  0.0058364          -0.8013          0.4230\n2 (76) -0.0517227  -0.0133333  0.0035860          -0.6411          0.5215\n3 (77) -0.0823651  -0.0131579  0.0028185          -1.3036          0.1924\n4 (77)  0.0441815  -0.0131579  0.0029720           1.0518          0.2929\n5 (77)  0.0524637  -0.0131579  0.0032983           1.1426          0.2532\n6 (77) -0.0327280  -0.0131579  0.0046576          -0.2868          0.7743\n\n\n2017 - 2019, 2021: Significant Short-distance Positive Correlation (High Moran’s I values at low lags) suggests a clustered pattern; Significant Long-distance Negative Correlation (Negative Moran’s I values at larger distances) suggest that dissimilar values are found near each other\n2020, 2022: Correlogram is flat and close to zero across all distances, suggests no significant spatial autocorrelation at any lag, meaning that the spatial distribution of values is random\n\n\n\n\nCode\npar(mfrow=c(2,3))\nfor (year in yr){\n  MI_corr &lt;- sp.correlogram(\n    nb,\n    possession_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2),\n    order = 6,\n    method=\"I\", \n    style=\"W\",\n    zero.policy = TRUE) # handle Phuket, an isolated province\n  plot(MI_corr, main = paste(year, \"possession_cases\"))\n  print(MI_corr)}\n\n\nSpatial correlogram for possession_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (77)  0.3132301  -0.0131579  0.0048723           4.6759       2.926e-06 ***\n2 (76)  0.1532018  -0.0133333  0.0029862           3.0475        0.002308 ** \n3 (77)  0.1007286  -0.0131579  0.0023551           2.3468        0.018937 *  \n4 (77)  0.0240663  -0.0131579  0.0024859           0.7466        0.455306    \n5 (77) -0.0206022  -0.0131579  0.0027664          -0.1415        0.887448    \n6 (77)  0.0213155  -0.0131579  0.0039160           0.5509        0.581710    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for possession_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (77)  0.2764915  -0.0131579  0.0045216           4.3075       1.651e-05 ***\n2 (76)  0.1290588  -0.0133333  0.0027681           2.7064        0.006801 ** \n3 (77)  0.0746536  -0.0131579  0.0021865           1.8779        0.060394 .  \n4 (77)  0.0410845  -0.0131579  0.0023090           1.1288        0.258972    \n5 (77) -0.0156378  -0.0131579  0.0025730          -0.0489        0.961007    \n6 (77)  0.0240339  -0.0131579  0.0036462           0.6159        0.537947    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for possession_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (77)  0.3723814  -0.0131579  0.0050578           5.4211       5.922e-08 ***\n2 (76)  0.1432547  -0.0133333  0.0031016           2.8117        0.004928 ** \n3 (77)  0.0722020  -0.0131579  0.0024442           1.7266        0.084245 .  \n4 (77)  0.0079637  -0.0131579  0.0025794           0.4159        0.677497    \n5 (77) -0.0386579  -0.0131579  0.0028687          -0.4761        0.634006    \n6 (77)  0.0104707  -0.0131579  0.0040586           0.3709        0.710717    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for possession_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n          estimate expectation    variance standard deviate Pr(I) two sided    \n1 (77)  0.36942323 -0.01315789  0.00524894           5.2807       1.287e-07 ***\n2 (76)  0.10694259 -0.01333333  0.00322055           2.1194         0.03406 *  \n3 (77)  0.00081767 -0.01315789  0.00253611           0.2775         0.78139    \n4 (77)  0.00941161 -0.01315789  0.00267579           0.4363         0.66261    \n5 (77) -0.04853504 -0.01315789  0.00297422          -0.6487         0.51654    \n6 (77) -0.12691678 -0.01315789  0.00420568          -1.7542         0.07940 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for possession_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (77)  0.1969197  -0.0131579  0.0054673           2.8412        0.004495 ** \n2 (76)  0.2006583  -0.0133333  0.0033564           3.6937        0.000221 ***\n3 (77)  0.1348548  -0.0131579  0.0026410           2.8801        0.003975 ** \n4 (77)  0.3850645  -0.0131579  0.0027859           7.5447       4.532e-14 ***\n5 (77) -0.0169954  -0.0131579  0.0030947          -0.0690        0.945003    \n6 (77) -0.1341956  -0.0131579  0.0043736          -1.8302        0.067219 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\n\n\n\nSpatial correlogram for possession_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided\n1 (77) -0.0827032  -0.0131579  0.0058006          -0.9131          0.3612\n2 (76) -0.0338451  -0.0133333  0.0035638          -0.3436          0.7312\n3 (77) -0.0774696  -0.0131579  0.0028013          -1.2151          0.2243\n4 (77)  0.0626648  -0.0131579  0.0029540           1.3951          0.1630\n5 (77) -0.0262732  -0.0131579  0.0032786          -0.2291          0.8188\n6 (77) -0.0190224  -0.0131579  0.0046300          -0.0862          0.9313\n\n\n2017 - 2021: Significant Short-distance Positive Correlation (High Moran’s I values at low lags) suggests a clustered pattern; Significant Long-distance Negative Correlation (Negative Moran’s I values at larger distances) suggest that dissimilar values are found near each other\n2022: Correlogram is flat and close to zero across all distances, suggests no significant spatial autocorrelation at any lag, meaning that the spatial distribution of values is random\n\n\n\n\nCode\npar(mfrow=c(2,3))\nfor (year in yr){\n  MI_corr &lt;- sp.correlogram(\n    nb,\n    possession_with_intent_to_distribute_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2),\n    order = 6,\n    method=\"I\", \n    style=\"W\",\n    zero.policy = TRUE) # handle Phuket, an isolated province\n  plot(MI_corr, main = paste(year, \"possession_with_intent_to_distribute_cases\"))\n  print(MI_corr)}\n\n\nSpatial correlogram for possession_with_intent_to_distribute_cases %&gt;% filter(fiscal_year ==      year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided   \n1 (77)  0.1580999  -0.0131579  0.0031630           3.0451        0.002326 **\n2 (76)  0.0162369  -0.0133333  0.0019227           0.6744        0.500080   \n3 (77) -0.0609857  -0.0131579  0.0015335          -1.2214        0.221951   \n4 (77) -0.0268098  -0.0131579  0.0016238          -0.3388        0.734771   \n5 (77) -0.0409738  -0.0131579  0.0018234          -0.6514        0.514781   \n6 (77) -0.0206921  -0.0131579  0.0026011          -0.1477        0.882559   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for possession_with_intent_to_distribute_cases %&gt;% filter(fiscal_year ==      year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided   \n1 (77)  0.1801406  -0.0131579  0.0039007           3.0950        0.001968 **\n2 (76) -0.0022833  -0.0133333  0.0023817           0.2264        0.820873   \n3 (77) -0.0674658  -0.0131579  0.0018880          -1.2498        0.211356   \n4 (77) -0.0225452  -0.0131579  0.0019958          -0.2101        0.833571   \n5 (77) -0.0287503  -0.0131579  0.0022304          -0.3302        0.741279   \n6 (77) -0.0223764  -0.0131579  0.0031685          -0.1638        0.869913   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for possession_with_intent_to_distribute_cases %&gt;% filter(fiscal_year ==      year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided   \n1 (77)  0.1630313  -0.0131579  0.0045084           2.6240         0.00869 **\n2 (76) -0.0506937  -0.0133333  0.0027598          -0.7112         0.47698   \n3 (77) -0.0808850  -0.0131579  0.0021802          -1.4505         0.14692   \n4 (77) -0.0283234  -0.0131579  0.0023023          -0.3161         0.75196   \n5 (77) -0.0015985  -0.0131579  0.0025657           0.2282         0.81948   \n6 (77) -0.0272291  -0.0131579  0.0036360          -0.2334         0.81549   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for possession_with_intent_to_distribute_cases %&gt;% filter(fiscal_year ==      year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided  \n1 (77)  0.1160863  -0.0131579  0.0051706           1.7974         0.07227 .\n2 (76)  0.0882911  -0.0133333  0.0031718           1.8045         0.07116 .\n3 (77)  0.0445712  -0.0131579  0.0024984           1.1549         0.24811  \n4 (77) -0.0176631  -0.0131579  0.0026363          -0.0877         0.93008  \n5 (77) -0.1050787  -0.0131579  0.0029310          -1.6979         0.08953 .\n6 (77) -0.1202366  -0.0131579  0.0041454          -1.6631         0.09629 .\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for possession_with_intent_to_distribute_cases %&gt;% filter(fiscal_year ==      year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (77)  0.1722358  -0.0131579  0.0058253           2.4290       0.0151390 *  \n2 (76)  0.0812325  -0.0133333  0.0035792           1.5807       0.1139518    \n3 (77) -0.0383423  -0.0131579  0.0028132          -0.4748       0.6349113    \n4 (77)  0.1874144  -0.0131579  0.0029665           3.6826       0.0002309 ***\n5 (77) -0.0765379  -0.0131579  0.0032922          -1.1046       0.2693299    \n6 (77) -0.1956846  -0.0131579  0.0046491          -2.6770       0.0074291 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\n\n\n\nSpatial correlogram for possession_with_intent_to_distribute_cases %&gt;% filter(fiscal_year ==      year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided  \n1 (77) -0.0264389  -0.0131579  0.0057183          -0.1756         0.86058  \n2 (76) -0.1012529  -0.0133333  0.0035126          -1.4835         0.13795  \n3 (77)  0.0149777  -0.0131579  0.0027617           0.5354         0.59238  \n4 (77) -0.0282964  -0.0131579  0.0029125          -0.2805         0.77909  \n5 (77)  0.0770946  -0.0131579  0.0032332           1.5872         0.11246  \n6 (77) -0.1370510  -0.0131579  0.0045667          -1.8333         0.06675 .\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nFor all years,\nSignificant Short-distance Positive Correlation (High Moran’s I values at low lags) suggests a clustered pattern; Significant Long-distance Negative Correlation (Negative Moran’s I values at larger distances) suggest that dissimilar values are found near each other.\n\n\n\n\nCode\npar(mfrow=c(2,3))\nfor (year in yr){\n  MI_corr &lt;- sp.correlogram(\n    nb,\n    possession_with_intent_to_distribute_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2),\n    order = 6,\n    method=\"I\", \n    style=\"W\",\n    zero.policy = TRUE) # handle Phuket, an isolated province\n  plot(MI_corr, main = paste(year, \"possession_with_intent_to_distribute_cases\"))\n  print(MI_corr)}\n\n\nSpatial correlogram for possession_with_intent_to_distribute_cases %&gt;% filter(fiscal_year ==      year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided   \n1 (77)  0.1580999  -0.0131579  0.0031630           3.0451        0.002326 **\n2 (76)  0.0162369  -0.0133333  0.0019227           0.6744        0.500080   \n3 (77) -0.0609857  -0.0131579  0.0015335          -1.2214        0.221951   \n4 (77) -0.0268098  -0.0131579  0.0016238          -0.3388        0.734771   \n5 (77) -0.0409738  -0.0131579  0.0018234          -0.6514        0.514781   \n6 (77) -0.0206921  -0.0131579  0.0026011          -0.1477        0.882559   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for possession_with_intent_to_distribute_cases %&gt;% filter(fiscal_year ==      year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided   \n1 (77)  0.1801406  -0.0131579  0.0039007           3.0950        0.001968 **\n2 (76) -0.0022833  -0.0133333  0.0023817           0.2264        0.820873   \n3 (77) -0.0674658  -0.0131579  0.0018880          -1.2498        0.211356   \n4 (77) -0.0225452  -0.0131579  0.0019958          -0.2101        0.833571   \n5 (77) -0.0287503  -0.0131579  0.0022304          -0.3302        0.741279   \n6 (77) -0.0223764  -0.0131579  0.0031685          -0.1638        0.869913   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for possession_with_intent_to_distribute_cases %&gt;% filter(fiscal_year ==      year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided   \n1 (77)  0.1630313  -0.0131579  0.0045084           2.6240         0.00869 **\n2 (76) -0.0506937  -0.0133333  0.0027598          -0.7112         0.47698   \n3 (77) -0.0808850  -0.0131579  0.0021802          -1.4505         0.14692   \n4 (77) -0.0283234  -0.0131579  0.0023023          -0.3161         0.75196   \n5 (77) -0.0015985  -0.0131579  0.0025657           0.2282         0.81948   \n6 (77) -0.0272291  -0.0131579  0.0036360          -0.2334         0.81549   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for possession_with_intent_to_distribute_cases %&gt;% filter(fiscal_year ==      year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided  \n1 (77)  0.1160863  -0.0131579  0.0051706           1.7974         0.07227 .\n2 (76)  0.0882911  -0.0133333  0.0031718           1.8045         0.07116 .\n3 (77)  0.0445712  -0.0131579  0.0024984           1.1549         0.24811  \n4 (77) -0.0176631  -0.0131579  0.0026363          -0.0877         0.93008  \n5 (77) -0.1050787  -0.0131579  0.0029310          -1.6979         0.08953 .\n6 (77) -0.1202366  -0.0131579  0.0041454          -1.6631         0.09629 .\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for possession_with_intent_to_distribute_cases %&gt;% filter(fiscal_year ==      year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (77)  0.1722358  -0.0131579  0.0058253           2.4290       0.0151390 *  \n2 (76)  0.0812325  -0.0133333  0.0035792           1.5807       0.1139518    \n3 (77) -0.0383423  -0.0131579  0.0028132          -0.4748       0.6349113    \n4 (77)  0.1874144  -0.0131579  0.0029665           3.6826       0.0002309 ***\n5 (77) -0.0765379  -0.0131579  0.0032922          -1.1046       0.2693299    \n6 (77) -0.1956846  -0.0131579  0.0046491          -2.6770       0.0074291 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\n\n\n\nSpatial correlogram for possession_with_intent_to_distribute_cases %&gt;% filter(fiscal_year ==      year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided  \n1 (77) -0.0264389  -0.0131579  0.0057183          -0.1756         0.86058  \n2 (76) -0.1012529  -0.0133333  0.0035126          -1.4835         0.13795  \n3 (77)  0.0149777  -0.0131579  0.0027617           0.5354         0.59238  \n4 (77) -0.0282964  -0.0131579  0.0029125          -0.2805         0.77909  \n5 (77)  0.0770946  -0.0131579  0.0032332           1.5872         0.11246  \n6 (77) -0.1370510  -0.0131579  0.0045667          -1.8333         0.06675 .\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSimilar autocorrelation pattern and significance with possession with intent to distribute\n\n\n\n\nCode\npar(mfrow=c(2,3))\nfor (year in yr){\n  MI_corr &lt;- sp.correlogram(\n    nb,\n    production_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2),\n    order = 6,\n    method=\"I\", \n    style=\"W\",\n    zero.policy = TRUE) # handle Phuket, an isolated province\n  plot(MI_corr, main = paste(year, \"production_cases\"))\n  print(MI_corr)}\n\n\nSpatial correlogram for production_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (77)  0.5561174  -0.0131579  0.0043424           8.6388       &lt; 2.2e-16 ***\n2 (76)  0.3961935  -0.0133333  0.0026566           7.9455       1.934e-15 ***\n3 (77)  0.1971685  -0.0131579  0.0021004           4.5893       4.448e-06 ***\n4 (77)  0.0595033  -0.0131579  0.0022186           1.5426          0.1229    \n5 (77) -0.0104617  -0.0131579  0.0024741           0.0542          0.9568    \n6 (77) -0.0415630  -0.0131579  0.0035084          -0.4796          0.6315    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for production_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n          estimate expectation    variance standard deviate Pr(I) two sided    \n1 (77)  0.50997666 -0.01315789  0.00441889           7.8697       3.556e-15 ***\n2 (76)  0.39172438 -0.01333333  0.00270413           7.7894       6.734e-15 ***\n3 (77)  0.25346637 -0.01315789  0.00213714           5.7674       8.049e-09 ***\n4 (77)  0.09427400 -0.01315789  0.00225719           2.2613         0.02374 *  \n5 (77)  0.00030724 -0.01315789  0.00251628           0.2684         0.78837    \n6 (77) -0.03745034 -0.01315789  0.00356719          -0.4067         0.68420    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for production_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (77)  0.3899209  -0.0131579  0.0044361           6.0519       1.432e-09 ***\n2 (76)  0.2850221  -0.0133333  0.0027148           5.7261       1.027e-08 ***\n3 (77)  0.1984241  -0.0131579  0.0021454           4.5680       4.925e-06 ***\n4 (77)  0.0618549  -0.0131579  0.0022659           1.5759          0.1151    \n5 (77) -0.0154304  -0.0131579  0.0025258          -0.0452          0.9639    \n6 (77) -0.0249549  -0.0131579  0.0035804          -0.1972          0.8437    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for production_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (77)  0.2682891  -0.0131579  0.0052346           3.8900       0.0001002 ***\n2 (76)  0.0013204  -0.0133333  0.0032116           0.2586       0.7959642    \n3 (77) -0.0204744  -0.0131579  0.0025292          -0.1455       0.8843295    \n4 (77)  0.0454432  -0.0131579  0.0026686           1.1344       0.2566257    \n5 (77) -0.0113841  -0.0131579  0.0029663           0.0326       0.9740187    \n6 (77) -0.1078964  -0.0131579  0.0041947          -1.4628       0.1435284    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for production_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (77)  0.4209831  -0.0131579  0.0056304           5.7858       7.219e-09 ***\n2 (76)  0.1121723  -0.0133333  0.0034579           2.1343        0.032818 *  \n3 (77)  0.1273393  -0.0131579  0.0027195           2.6942        0.007056 ** \n4 (77)  0.2339539  -0.0131579  0.0028682           4.6141       3.947e-06 ***\n5 (77)  0.0081866  -0.0131579  0.0031847           0.3782        0.705262    \n6 (77) -0.1567977  -0.0131579  0.0044991          -2.1415        0.032237 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\n\n\n\nSpatial correlogram for production_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided\n1 (77)  0.0211452  -0.0131579  0.0055824           0.4591          0.6462\n2 (76) -0.0137077  -0.0133333  0.0034280          -0.0064          0.9949\n3 (77) -0.0180212  -0.0131579  0.0026964          -0.0937          0.9254\n4 (77)  0.0538960  -0.0131579  0.0028440           1.2574          0.2086\n5 (77) -0.0614679  -0.0131579  0.0031582          -0.8596          0.3900\n6 (77) -0.0792520  -0.0131579  0.0044622          -0.9894          0.3224\n\n\nSimilar autocorrelation pattern and significance with possession with intent to distribute\n\n\n\n\nCode\npar(mfrow=c(2,3))\nfor (year in yr){\n  MI_corr &lt;- sp.correlogram(\n    nb,\n    import_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2),\n    order = 6,\n    method=\"I\", \n    style=\"W\",\n    zero.policy = TRUE) # handle Phuket, an isolated province\n  plot(MI_corr, main = paste(year, \"import_cases\"))\n  print(MI_corr)}\n\n\nSpatial correlogram for import_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (77)  0.2107355  -0.0131579  0.0026864           4.3197       1.562e-05 ***\n2 (76)  0.0011857  -0.0133333  0.0016263           0.3600          0.7188    \n3 (77) -0.0034934  -0.0131579  0.0013044           0.2676          0.7890    \n4 (77) -0.0053145  -0.0131579  0.0013835           0.2109          0.8330    \n5 (77) -0.0113093  -0.0131579  0.0015605           0.0468          0.9627    \n6 (77) -0.0389332  -0.0131579  0.0022345          -0.5453          0.5856    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for import_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (77)  0.2143448  -0.0131579  0.0039368           3.6259        0.000288 ***\n2 (76) -0.0310609  -0.0133333  0.0024042          -0.3615        0.717692    \n3 (77) -0.0441780  -0.0131579  0.0019054          -0.7106        0.477311    \n4 (77) -0.0190011  -0.0131579  0.0020141          -0.1302        0.896408    \n5 (77) -0.0206069  -0.0131579  0.0022503          -0.1570        0.875223    \n6 (77) -0.0518814  -0.0131579  0.0031964          -0.6849        0.493389    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for import_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (77)  0.1895404  -0.0131579  0.0024799           4.0704       4.694e-05 ***\n2 (76) -0.0199501  -0.0133333  0.0014978          -0.1710          0.8642    \n3 (77) -0.0158861  -0.0131579  0.0012052          -0.0786          0.9374    \n4 (77) -0.0117500  -0.0131579  0.0012794           0.0394          0.9686    \n5 (77) -0.0187799  -0.0131579  0.0014465          -0.1478          0.8825    \n6 (77) -0.0295314  -0.0131579  0.0020757          -0.3594          0.7193    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for import_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided  \n1 (77)  0.1308516  -0.0131579  0.0045347           2.1385         0.03247 *\n2 (76)  0.0945194  -0.0133333  0.0027762           2.0469         0.04066 *\n3 (77) -0.0244920  -0.0131579  0.0021928          -0.2420         0.80875  \n4 (77) -0.0512433  -0.0131579  0.0023156          -0.7915         0.42868  \n5 (77) -0.0751745  -0.0131579  0.0025802          -1.2209         0.22212  \n6 (77) -0.0700093  -0.0131579  0.0036563          -0.9402         0.34712  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for import_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided  \n1 (77)  0.0971524  -0.0131579  0.0025827           2.1706         0.02996 *\n2 (76) -0.0466511  -0.0133333  0.0015617          -0.8431         0.39918  \n3 (77) -0.0267697  -0.0131579  0.0012546          -0.3843         0.70076  \n4 (77) -0.0227164  -0.0131579  0.0013312          -0.2620         0.79333  \n5 (77) -0.0268900  -0.0131579  0.0015032          -0.3542         0.72320  \n6 (77) -0.0342302  -0.0131579  0.0021547          -0.4540         0.64986  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\n\n\n\nSpatial correlogram for import_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided   \n1 (77) -0.0597902  -0.0131579  0.0044985          -0.6953        0.486888   \n2 (76) -0.0388081  -0.0133333  0.0027537          -0.4855        0.627349   \n3 (77)  0.0398512  -0.0131579  0.0021754           1.1365        0.255737   \n4 (77)  0.1134260  -0.0131579  0.0022973           2.6410        0.008267 **\n5 (77) -0.0762542  -0.0131579  0.0025602          -1.2470        0.212398   \n6 (77) -0.1055464  -0.0131579  0.0036284          -1.5338        0.125088   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSimilar autocorrelation pattern and significance with possession with intent to distribute\n\n\n\n\nCode\npar(mfrow=c(2,3))\nfor (year in yr){\n  MI_corr &lt;- sp.correlogram(\n    nb,\n    export_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2),\n    order = 6,\n    method=\"I\", \n    style=\"W\",\n    zero.policy = TRUE) # handle Phuket, an isolated province\n  plot(MI_corr, main = paste(year, \"export_cases\"))\n  print(MI_corr)}\n\n\nSpatial correlogram for export_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided  \n1 (77) -0.0501879  -0.0131579  0.0038920          -0.5936          0.5528  \n2 (76) -0.0318509  -0.0133333  0.0023763          -0.3799          0.7040  \n3 (77)  0.0157234  -0.0131579  0.0018839           0.6654          0.5058  \n4 (77)  0.0758895  -0.0131579  0.0019915           1.9954          0.0460 *\n5 (77) -0.0086340  -0.0131579  0.0022256           0.0959          0.9236  \n6 (77) -0.0545765  -0.0131579  0.0031619          -0.7366          0.4614  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for export_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided  \n1 (77)  0.0076491  -0.0131579  0.0050189           0.2937         0.76899  \n2 (76)  0.0783952  -0.0133333  0.0030775           1.6535         0.09823 .\n3 (77) -0.0798739  -0.0131579  0.0024256          -1.3546         0.17553  \n4 (77) -0.0182770  -0.0131579  0.0025598          -0.1012         0.91941  \n5 (77) -0.0350293  -0.0131579  0.0028473          -0.4099         0.68189  \n6 (77) -0.0481676  -0.0131579  0.0040288          -0.5516         0.58124  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for export_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided\n1 (77)  0.0791753  -0.0131579  0.0046525           1.3537          0.1758\n2 (76)  0.0042422  -0.0133333  0.0028494           0.3293          0.7420\n3 (77) -0.0147440  -0.0131579  0.0022494          -0.0334          0.9733\n4 (77) -0.0504912  -0.0131579  0.0023750          -0.7661          0.4436\n5 (77) -0.0735313  -0.0131579  0.0026451          -1.1739          0.2404\n6 (77) -0.0146220  -0.0131579  0.0037469          -0.0239          0.9809\n\n\nSpatial correlogram for export_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided  \n1 (77) -0.0667544  -0.0131579  0.0048971          -0.7659         0.44374  \n2 (76) -0.0863345  -0.0133333  0.0030016          -1.3324         0.18271  \n3 (77)  0.0999080  -0.0131579  0.0023670           2.3240         0.02013 *\n4 (77) -0.0671379  -0.0131579  0.0024984          -1.0800         0.28016  \n5 (77) -0.0142748  -0.0131579  0.0027801          -0.0212         0.98310  \n6 (77) -0.0102655  -0.0131579  0.0039350           0.0461         0.96322  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for export_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided\n1 (77) -0.0710458  -0.0131579  0.0053430          -0.7919          0.4284\n2 (76) -0.0029742  -0.0133333  0.0032791           0.1809          0.8564\n3 (77)  0.0418536  -0.0131579  0.0025813           1.0828          0.2789\n4 (77) -0.0747826  -0.0131579  0.0027232          -1.1809          0.2376\n5 (77)  0.0223828  -0.0131579  0.0030261           0.6461          0.5182\n6 (77) -0.0669589  -0.0131579  0.0042780          -0.8226          0.4108\n\n\n\n\n\n\n\n\n\nSpatial correlogram for export_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Moran's I\n          estimate expectation    variance standard deviate Pr(I) two sided  \n1 (77) -0.02081516 -0.01315789  0.00141145          -0.2038         0.83850  \n2 (76) -0.00261891 -0.01333333  0.00083303           0.3712         0.71047  \n3 (77) -0.02002237 -0.01315789  0.00069160          -0.2610         0.79407  \n4 (77) -0.03192043 -0.01315789  0.00074052          -0.6895         0.49052  \n5 (77) -0.02633163 -0.01315789  0.00085706          -0.4500         0.65272  \n6 (77) -0.09223381 -0.01315789  0.00125380          -2.2332         0.02553 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nFor most of the years, correlogram is flat and close to zero across all distances, suggests no significant spatial autocorrelation at any lag, meaning that the spatial distribution of values is random.\n\n\nRemember to handle the years with no cases\n\n\nCode\npar(mfrow=c(2,3))\nfor (year in yr){\n  cases = conspiracy_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2)\n  \n    # checks if the year's vector has no_case = 0\n  if (sum(cases)==0) {\n    message(paste(\"Skipping year\", year, \"due to empty data (0 cases)\"))\n    next  # continue to next iteration\n  }\n  \n  MI_corr &lt;- sp.correlogram(\n    nb,\n    cases,\n    order = 6,\n    method=\"I\", \n    style=\"W\",\n    zero.policy = TRUE) # handle Phuket, an isolated province\n  plot(MI_corr, main = paste(year, \"conspiracy_cases\"))\n  print(MI_corr)}\n\n\nSpatial correlogram for cases \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided  \n1 (77)  0.1215807  -0.0131579  0.0053259           1.8463         0.06485 .\n2 (76)  0.0230655  -0.0133333  0.0032685           0.6367         0.52434  \n3 (77) -0.1276333  -0.0131579  0.0025731          -2.2567         0.02402 *\n4 (77) -0.0060479  -0.0131579  0.0027146           0.1365         0.89145  \n5 (77) -0.0143282  -0.0131579  0.0030167          -0.0213         0.98300  \n6 (77) -0.1098682  -0.0131579  0.0042649          -1.4809         0.13864  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for cases \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided   \n1 (77)  0.2070047  -0.0131579  0.0045987           3.2466        0.001168 **\n2 (76) -0.0436656  -0.0133333  0.0028160          -0.5716        0.567595   \n3 (77) -0.0333358  -0.0131579  0.0022236          -0.4279        0.668717   \n4 (77) -0.0206808  -0.0131579  0.0023479          -0.1553        0.876619   \n5 (77) -0.0504201  -0.0131579  0.0026155          -0.7286        0.466242   \n6 (77) -0.0550177  -0.0131579  0.0037055          -0.6877        0.491666   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for cases \nmethod: Moran's I\n          estimate expectation    variance standard deviate Pr(I) two sided\n1 (77)  0.01621459 -0.01315789  0.00106794           0.8988          0.3688\n2 (76)  0.00978584 -0.01333333  0.00061931           0.9290          0.3529\n3 (77) -0.01255721 -0.01315789  0.00052649           0.0262          0.9791\n4 (77) -0.01883223 -0.01315789  0.00056728          -0.2382          0.8117\n5 (77) -0.02896492 -0.01315789  0.00066755          -0.6118          0.5407\n6 (77) -0.02738208 -0.01315789  0.00098956          -0.4522          0.6511\n\n\nSpatial correlogram for cases \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided  \n1 (77)  0.0168143  -0.0131579  0.0046729           0.4385         0.66106  \n2 (76)  0.0838190  -0.0133333  0.0028622           1.8160         0.06938 .\n3 (77) -0.0582069  -0.0131579  0.0022592          -0.9478         0.34324  \n4 (77) -0.0208558  -0.0131579  0.0023853          -0.1576         0.87476  \n5 (77) -0.0338693  -0.0131579  0.0026564          -0.4018         0.68780  \n6 (77) -0.0481529  -0.0131579  0.0037626          -0.5705         0.56833  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSkipping year 2021 due to empty data (0 cases)\n\n\nSkipping year 2022 due to empty data (0 cases)\n\n\n\n\n\n\n\n\n\nSimilar autocorrelation pattern and significance with possession with intent to distribute\n\n\n\n\n\nGeary’s C\n\ndrug usepossessionpossession with intent to distributetraffickingproductionimportexportconspiracy\n\n\n\n\nCode\npar(mfrow=c(2,3))\nfor (year in yr){\n  GC_corr &lt;- sp.correlogram(\n    nb,\n    drug_use_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2),\n    order = 6,\n    method=\"C\", \n    style=\"W\",\n    zero.policy = TRUE) # handle Phuket, an isolated province\n  plot(GC_corr, main = paste(year, \"drug_use_cases\"))\n  print(GC_corr)}\n\n\nSpatial correlogram for drug_use_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n       estimate expectation variance standard deviate Pr(I) two sided\n1 (77) 1.025845    1.000000 0.020655           0.1798          0.8573\n2 (76) 1.007516    1.000000 0.015434           0.0605          0.9518\n3 (77) 0.957695    1.000000 0.017516          -0.3197          0.7492\n4 (77) 0.941691    1.000000 0.026950          -0.3552          0.7224\n5 (77) 1.096812    1.000000 0.056515           0.4072          0.6838\n6 (77) 0.992459    1.000000 0.112669          -0.0225          0.9821\n\n\nSpatial correlogram for drug_use_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n       estimate expectation variance standard deviate Pr(I) two sided\n1 (77) 1.003652    1.000000 0.018924           0.0265          0.9788\n2 (76) 1.032794    1.000000 0.014041           0.2768          0.7820\n3 (77) 0.943228    1.000000 0.015794          -0.4517          0.6515\n4 (77) 0.920995    1.000000 0.024139          -0.5085          0.6111\n5 (77) 1.095522    1.000000 0.050271           0.4260          0.6701\n6 (77) 1.006909    1.000000 0.099991           0.0219          0.9826\n\n\nSpatial correlogram for drug_use_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided\n1 (77) 0.9166967   1.0000000 0.0122647          -0.7522          0.4519\n2 (76) 1.0306111   1.0000000 0.0086813           0.3285          0.7425\n3 (77) 0.9385333   1.0000000 0.0091712          -0.6418          0.5210\n4 (77) 0.9063930   1.0000000 0.0133234          -0.8110          0.4174\n5 (77) 1.0746359   1.0000000 0.0262469           0.4607          0.6450\n6 (77) 1.0121803   1.0000000 0.0512189           0.0538          0.9571\n\n\nSpatial correlogram for drug_use_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided\n1 (77) 1.1399926   1.0000000 0.0106329           1.3576          0.1746\n2 (76) 1.0289152   1.0000000 0.0073678           0.3369          0.7362\n3 (77) 0.9905066   1.0000000 0.0075482          -0.1093          0.9130\n4 (77) 1.0570936   1.0000000 0.0106732           0.5526          0.5805\n5 (77) 1.0262406   1.0000000 0.0203599           0.1839          0.8541\n6 (77) 1.2054465   1.0000000 0.0392674           1.0368          0.2998\n\n\nSpatial correlogram for drug_use_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided   \n1 (77) 0.7808514   1.0000000 0.0077702          -2.4861        0.012914 * \n2 (76) 0.8945700   1.0000000 0.0050636          -1.4816        0.138444   \n3 (77) 1.0781699   1.0000000 0.0047010           1.1401        0.254243   \n4 (77) 0.8332144   1.0000000 0.0060238          -2.1489        0.031640 * \n5 (77) 1.1066271   1.0000000 0.0100322           1.0646        0.287076   \n6 (77) 1.4450022   1.0000000 0.0183006           3.2895        0.001004 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\n\n\n\nSpatial correlogram for drug_use_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided   \n1 (77) 1.0366729   1.0000000 0.0073570           0.4276        0.668972   \n2 (76) 1.0461574   1.0000000 0.0047310           0.6711        0.502179   \n3 (77) 1.0890895   1.0000000 0.0042900           1.3602        0.173772   \n4 (77) 1.0654429   1.0000000 0.0053527           0.8945        0.371059   \n5 (77) 1.1431019   1.0000000 0.0085414           1.5484        0.121527   \n6 (77) 1.3389397   1.0000000 0.0152739           2.7425        0.006097 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\nCode\npar(mfrow=c(2,3))\nfor (year in yr){\n  GC_corr &lt;- sp.correlogram(\n    nb,\n    possession_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2),\n    order = 6,\n    method=\"C\", \n    style=\"W\",\n    zero.policy = TRUE) # handle Phuket, an isolated province\n  plot(GC_corr, main = paste(year, \"possession_cases\"))\n  print(GC_corr)}\n\n\nSpatial correlogram for possession_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided  \n1 (77) 0.7603383   1.0000000 0.0132611          -2.0812         0.03742 *\n2 (76) 0.8662146   1.0000000 0.0094833          -1.3738         0.16950  \n3 (77) 0.8193554   1.0000000 0.0101622          -1.7920         0.07314 .\n4 (77) 0.8402066   1.0000000 0.0149417          -1.3072         0.19113  \n5 (77) 0.9030045   1.0000000 0.0298417          -0.5615         0.57447  \n6 (77) 0.8588501   1.0000000 0.0585169          -0.5835         0.55956  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for possession_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n       estimate expectation variance standard deviate Pr(I) two sided\n1 (77) 0.811681    1.000000 0.015409          -1.5171          0.1292\n2 (76) 0.902420    1.000000 0.011212          -0.9216          0.3568\n3 (77) 0.853329    1.000000 0.012298          -1.3226          0.1860\n4 (77) 0.856354    1.000000 0.018430          -1.0581          0.2900\n5 (77) 0.936246    1.000000 0.037589          -0.3288          0.7423\n6 (77) 0.868239    1.000000 0.074246          -0.4836          0.6287\n\n\nSpatial correlogram for possession_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided   \n1 (77) 0.6932033   1.0000000 0.0121255          -2.7861        0.005334 **\n2 (76) 0.9142878   1.0000000 0.0085692          -0.9259        0.354490   \n3 (77) 0.8628823   1.0000000 0.0090327          -1.4427        0.149098   \n4 (77) 0.8724798   1.0000000 0.0130973          -1.1143        0.265166   \n5 (77) 0.9476489   1.0000000 0.0257447          -0.3263        0.744217   \n6 (77) 0.8866702   1.0000000 0.0501994          -0.5058        0.612984   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for possession_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided  \n1 (77) 0.7879428   1.0000000 0.0109546          -2.0261         0.04276 *\n2 (76) 0.9204468   1.0000000 0.0076268          -0.9109         0.36233  \n3 (77) 0.9784123   1.0000000 0.0078682          -0.2434         0.80772  \n4 (77) 0.9720050   1.0000000 0.0111957          -0.2646         0.79133  \n5 (77) 0.9995664   1.0000000 0.0215205          -0.0030         0.99764  \n6 (77) 1.0162565   1.0000000 0.0416236           0.0797         0.93649  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for possession_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (77) 0.7612748   1.0000000 0.0096176          -2.4343        0.014923 *  \n2 (76) 0.7511029   1.0000000 0.0065506          -3.0752        0.002103 ** \n3 (77) 0.8657770   1.0000000 0.0065384          -1.6599        0.096927 .  \n4 (77) 0.6194235   1.0000000 0.0090242          -4.0062       6.169e-05 ***\n5 (77) 0.8773414   1.0000000 0.0166970          -0.9492        0.342495    \n6 (77) 1.3032569   1.0000000 0.0318311           1.6998        0.089178 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\n\n\n\nSpatial correlogram for possession_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided\n1 (77) 1.0431955   1.0000000 0.0075762           0.4963          0.6197\n2 (76) 0.9989580   1.0000000 0.0049074          -0.0149          0.9881\n3 (77) 1.0822602   1.0000000 0.0045080           1.2252          0.2205\n4 (77) 0.9795580   1.0000000 0.0057087          -0.2706          0.7867\n5 (77) 1.0536915   1.0000000 0.0093322           0.5558          0.5784\n6 (77) 1.1035071   1.0000000 0.0168794           0.7967          0.4256\n\n\n\n\n\n\nCode\npar(mfrow=c(2,3))\nfor (year in yr){\n  GC_corr &lt;- sp.correlogram(\n    nb,\n    possession_with_intent_to_distribute_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2),\n    order = 6,\n    method=\"C\", \n    style=\"W\",\n    zero.policy = TRUE) # handle Phuket, an isolated province\n  plot(GC_corr, main = paste(year, \"possession_with_intent_to_distribute_cases\"))\n  print(GC_corr)}\n\n\nSpatial correlogram for possession_with_intent_to_distribute_cases %&gt;% filter(fiscal_year ==      year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n       estimate expectation variance standard deviate Pr(I) two sided\n1 (77) 0.977063    1.000000 0.023729          -0.1489          0.8816\n2 (76) 1.067462    1.000000 0.017909           0.5041          0.6142\n3 (77) 0.995481    1.000000 0.020574          -0.0315          0.9749\n4 (77) 0.983634    1.000000 0.031944          -0.0916          0.9270\n5 (77) 1.059173    1.000000 0.067608           0.2276          0.8200\n6 (77) 0.947804    1.000000 0.135189          -0.1420          0.8871\n\n\nSpatial correlogram for possession_with_intent_to_distribute_cases %&gt;% filter(fiscal_year ==      year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n       estimate expectation variance standard deviate Pr(I) two sided\n1 (77) 0.937178    1.000000 0.019212          -0.4532          0.6504\n2 (76) 1.072144    1.000000 0.014273           0.6039          0.5459\n3 (77) 1.008058    1.000000 0.016081           0.0635          0.9493\n4 (77) 0.980108    1.000000 0.024606          -0.1268          0.8991\n5 (77) 1.043606    1.000000 0.051310           0.1925          0.8473\n6 (77) 0.958147    1.000000 0.102100          -0.1310          0.8958\n\n\nSpatial correlogram for possession_with_intent_to_distribute_cases %&gt;% filter(fiscal_year ==      year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n       estimate expectation variance standard deviate Pr(I) two sided\n1 (77) 0.940253    1.000000 0.015490          -0.4801          0.6312\n2 (76) 1.114501    1.000000 0.011277           1.0782          0.2809\n3 (77) 1.032378    1.000000 0.012379           0.2910          0.7710\n4 (77) 0.990147    1.000000 0.018561          -0.0723          0.9423\n5 (77) 1.006700    1.000000 0.037882           0.0344          0.9725\n6 (77) 0.951949    1.000000 0.074840          -0.1756          0.8606\n\n\nSpatial correlogram for possession_with_intent_to_distribute_cases %&gt;% filter(fiscal_year ==      year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided\n1 (77) 1.0417446   1.0000000 0.0114345           0.3904          0.6963\n2 (76) 0.9721116   1.0000000 0.0080131          -0.3115          0.7554\n3 (77) 0.9516943   1.0000000 0.0083455          -0.5288          0.5970\n4 (77) 1.0018557   1.0000000 0.0119751           0.0170          0.9865\n5 (77) 1.0267890   1.0000000 0.0232519           0.1757          0.8605\n6 (77) 1.0309239   1.0000000 0.0451386           0.1456          0.8843\n\n\nSpatial correlogram for possession_with_intent_to_distribute_cases %&gt;% filter(fiscal_year ==      year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided   \n1 (77) 0.7518440   1.0000000 0.0074246          -2.8800        0.003977 **\n2 (76) 0.8756346   1.0000000 0.0047855          -1.7978        0.072211 . \n3 (77) 0.9848215   1.0000000 0.0043573          -0.2299        0.818136   \n4 (77) 0.7836293   1.0000000 0.0054626          -2.9275        0.003417 **\n5 (77) 1.0235045   1.0000000 0.0087855           0.2508        0.801995   \n6 (77) 1.2763997   1.0000000 0.0157695           2.2010        0.027733 * \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\n\n\n\nSpatial correlogram for possession_with_intent_to_distribute_cases %&gt;% filter(fiscal_year ==      year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided  \n1 (77) 1.0646334   1.0000000 0.0080802           0.7190         0.47212  \n2 (76) 1.1600256   1.0000000 0.0053131           2.1954         0.02813 *\n3 (77) 1.0396696   1.0000000 0.0050093           0.5605         0.57515  \n4 (77) 1.0436376   1.0000000 0.0065273           0.5401         0.58911  \n5 (77) 0.8659941   1.0000000 0.0111506          -1.2690         0.20443  \n6 (77) 1.0936620   1.0000000 0.0205711           0.6530         0.51374  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\nCode\npar(mfrow=c(2,3))\nfor (year in yr){\n  GC_corr &lt;- sp.correlogram(\n    nb,\n    trafficking_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2),\n    order = 6,\n    method=\"C\", \n    style=\"W\",\n    zero.policy = TRUE) # handle Phuket, an isolated province\n  plot(GC_corr, main = paste(year, \"trafficking_cases\"))\n  print(GC_corr)}\n\n\nSpatial correlogram for trafficking_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided\n1 (77) 0.9121279   1.0000000 0.0112647          -0.8279          0.4077\n2 (76) 1.0134923   1.0000000 0.0078764           0.1520          0.8792\n3 (77) 0.8683637   1.0000000 0.0081767          -1.4558          0.1455\n4 (77) 0.9022347   1.0000000 0.0116994          -0.9039          0.3661\n5 (77) 1.0946627   1.0000000 0.0226395           0.6291          0.5293\n6 (77) 0.9552492   1.0000000 0.0438952          -0.2136          0.8309\n\n\nSpatial correlogram for trafficking_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided\n1 (77) 0.8823127   1.0000000 0.0082248          -1.2977          0.1944\n2 (76) 0.9758939   1.0000000 0.0054295          -0.3271          0.7436\n3 (77) 0.8911844   1.0000000 0.0051532          -1.5158          0.1296\n4 (77) 0.9495700   1.0000000 0.0067622          -0.6133          0.5397\n5 (77) 1.1313537   1.0000000 0.0116723           1.2158          0.2241\n6 (77) 0.9170223   1.0000000 0.0216301          -0.5642          0.5726\n\n\nSpatial correlogram for trafficking_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided  \n1 (77) 0.7765561   1.0000000 0.0123205          -2.0130         0.04411 *\n2 (76) 0.8453994   1.0000000 0.0087262          -1.6550         0.09792 .\n3 (77) 0.7813954   1.0000000 0.0092267          -2.2758         0.02286 *\n4 (77) 0.8775559   1.0000000 0.0134141          -1.0572         0.29042  \n5 (77) 1.0678267   1.0000000 0.0264484           0.4171         0.67663  \n6 (77) 1.0655954   1.0000000 0.0516280           0.2887         0.77282  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for trafficking_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided  \n1 (77) 0.9155115   1.0000000 0.0128276          -0.7460         0.45568  \n2 (76) 0.8270832   1.0000000 0.0091344          -1.8092         0.07041 .\n3 (77) 0.8220777   1.0000000 0.0097311          -1.8036         0.07129 .\n4 (77) 0.7689026   1.0000000 0.0142377          -1.9368         0.05278 .\n5 (77) 0.8165201   1.0000000 0.0282780          -1.0911         0.27523  \n6 (77) 0.7470304   1.0000000 0.0553423          -1.0753         0.28223  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for trafficking_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided  \n1 (77) 0.8283227   1.0000000 0.0128718          -1.5132         0.13023  \n2 (76) 0.8886772   1.0000000 0.0091700          -1.1625         0.24503  \n3 (77) 0.8619619   1.0000000 0.0097751          -1.3962         0.16266  \n4 (77) 0.7763758   1.0000000 0.0143095          -1.8694         0.06156 .\n5 (77) 0.9392638   1.0000000 0.0284374          -0.3602         0.71872  \n6 (77) 1.2151645   1.0000000 0.0556659           0.9120         0.36179  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\n\n\n\nSpatial correlogram for trafficking_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided  \n1 (77) 1.0195273   1.0000000 0.0090885           0.2048         0.83770  \n2 (76) 1.1141181   1.0000000 0.0061247           1.4582         0.14479  \n3 (77) 1.1090360   1.0000000 0.0060122           1.4062         0.15966  \n4 (77) 0.9343341   1.0000000 0.0081649          -0.7267         0.46740  \n5 (77) 0.7925758   1.0000000 0.0147882          -1.7057         0.08806 .\n6 (77) 0.9682140   1.0000000 0.0279560          -0.1901         0.84923  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\nCode\npar(mfrow=c(2,3))\nfor (year in yr){\n  GC_corr &lt;- sp.correlogram(\n    nb,\n    production_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2),\n    order = 6,\n    method=\"C\", \n    style=\"W\",\n    zero.policy = TRUE) # handle Phuket, an isolated province\n  plot(GC_corr, main = paste(year, \"production_cases\"))\n  print(GC_corr)}\n\n\nSpatial correlogram for production_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n       estimate expectation variance standard deviate Pr(I) two sided    \n1 (77) 0.547079    1.000000 0.016506          -3.5253       0.0004229 ***\n2 (76) 0.830325    1.000000 0.012095          -1.5428       0.1228777    \n3 (77) 0.749610    1.000000 0.013390          -2.1639       0.0304740 *  \n4 (77) 0.587882    1.000000 0.020212          -2.8988       0.0037460 ** \n5 (77) 0.639593    1.000000 0.041549          -1.7681       0.0770384 .  \n6 (77) 0.780957    1.000000 0.082284          -0.7636       0.4450994    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for production_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n       estimate expectation variance standard deviate Pr(I) two sided    \n1 (77) 0.577316    1.000000 0.016038          -3.3377       0.0008449 ***\n2 (76) 0.785412    1.000000 0.011718          -1.9823       0.0474453 *  \n3 (77) 0.686025    1.000000 0.012924          -2.7618       0.0057479 ** \n4 (77) 0.555840    1.000000 0.019452          -3.1847       0.0014493 ** \n5 (77) 0.631699    1.000000 0.039860          -1.8447       0.0650747 .  \n6 (77) 0.778642    1.000000 0.078855          -0.7883       0.4305323    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for production_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n       estimate expectation variance standard deviate Pr(I) two sided   \n1 (77) 0.693166    1.000000 0.015933          -2.4309        0.015063 * \n2 (76) 0.826324    1.000000 0.011634          -1.6102        0.107353   \n3 (77) 0.748382    1.000000 0.012819          -2.2223        0.026260 * \n4 (77) 0.604742    1.000000 0.019281          -2.8466        0.004419 **\n5 (77) 0.662805    1.000000 0.039480          -1.6971        0.089687 . \n6 (77) 0.792895    1.000000 0.078083          -0.7412        0.458597   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for production_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided  \n1 (77) 0.7544069   1.0000000 0.0110423          -2.3371         0.01943 *\n2 (76) 0.9101698   1.0000000 0.0076974          -1.0239         0.30589  \n3 (77) 0.9741034   1.0000000 0.0079555          -0.2903         0.77155  \n4 (77) 0.9322100   1.0000000 0.0113382          -0.6366         0.52436  \n5 (77) 1.0046266   1.0000000 0.0218372           0.0313         0.97502  \n6 (77) 0.9641394   1.0000000 0.0422664          -0.1744         0.86153  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for production_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (77) 0.5692587   1.0000000 0.0086183          -4.6399       3.486e-06 ***\n2 (76) 0.8192017   1.0000000 0.0057463          -2.3851         0.01708 *  \n3 (77) 0.8838705   1.0000000 0.0055445          -1.5596         0.11886    \n4 (77) 0.8136249   1.0000000 0.0074013          -2.1664         0.03028 *  \n5 (77) 0.9229837   1.0000000 0.0130919          -0.6731         0.50088    \n6 (77) 1.3217895   1.0000000 0.0245122           2.0553         0.03985 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\n\n\n\nSpatial correlogram for production_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided\n1 (77) 0.9291860   1.0000000 0.0089123          -0.7501          0.4532\n2 (76) 1.0196384   1.0000000 0.0059829           0.2539          0.7996\n3 (77) 0.9297275   1.0000000 0.0058370          -0.9198          0.3577\n4 (77) 0.8892738   1.0000000 0.0078788          -1.2474          0.2122\n5 (77) 1.0418370   1.0000000 0.0141526           0.3517          0.7251\n6 (77) 1.0584190   1.0000000 0.0266656           0.3577          0.7205\n\n\n\n\n\n\nCode\npar(mfrow=c(2,3))\nfor (year in yr){\n  GC_corr &lt;- sp.correlogram(\n    nb,\n    import_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2),\n    order = 6,\n    method=\"C\", \n    style=\"W\",\n    zero.policy = TRUE) # handle Phuket, an isolated province\n  plot(GC_corr, main = paste(year, \"import_cases\"))\n  print(GC_corr)}\n\n\nSpatial correlogram for import_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n       estimate expectation variance standard deviate Pr(I) two sided  \n1 (77) 0.916624    1.000000 0.026648          -0.5108         0.60952  \n2 (76) 1.257868    1.000000 0.020258           1.8117         0.07003 .\n3 (77) 0.874629    1.000000 0.023477          -0.8182         0.41322  \n4 (77) 0.741813    1.000000 0.036683          -1.3480         0.17765  \n5 (77) 0.595490    1.000000 0.078137          -1.4471         0.14787  \n6 (77) 0.677256    1.000000 0.156563          -0.8157         0.41469  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for import_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n       estimate expectation variance standard deviate Pr(I) two sided  \n1 (77) 0.727231    1.000000 0.018990          -1.9794         0.04777 *\n2 (76) 1.088242    1.000000 0.014095           0.7433         0.45732  \n3 (77) 0.956848    1.000000 0.015860          -0.3426         0.73186  \n4 (77) 0.840919    1.000000 0.024246          -1.0216         0.30696  \n5 (77) 0.658409    1.000000 0.050510          -1.5199         0.12854  \n6 (77) 0.711559    1.000000 0.100478          -0.9100         0.36284  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for import_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n       estimate expectation variance standard deviate Pr(I) two sided  \n1 (77) 0.938956    1.000000 0.027912          -0.3654         0.71483  \n2 (76) 1.292537    1.000000 0.021276           2.0055         0.04491 *\n3 (77) 0.879547    1.000000 0.024734          -0.7659         0.44374  \n4 (77) 0.736212    1.000000 0.038737          -1.3403         0.18016  \n5 (77) 0.591165    1.000000 0.082700          -1.4217         0.15512  \n6 (77) 0.668998    1.000000 0.165827          -0.8128         0.41631  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for import_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n       estimate expectation variance standard deviate Pr(I) two sided\n1 (77) 1.075297    1.000000 0.015328           0.6082          0.5431\n2 (76) 1.051441    1.000000 0.011147           0.4872          0.6261\n3 (77) 1.036754    1.000000 0.012218           0.3325          0.7395\n4 (77) 1.046771    1.000000 0.018299           0.3458          0.7295\n5 (77) 0.959159    1.000000 0.037300          -0.2115          0.8325\n6 (77) 0.936544    1.000000 0.073659          -0.2338          0.8151\n\n\nSpatial correlogram for import_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n       estimate expectation variance standard deviate Pr(I) two sided  \n1 (77) 1.081196    1.000000 0.027283           0.4916         0.62302  \n2 (76) 1.309788    1.000000 0.020770           2.1496         0.03159 *\n3 (77) 0.885670    1.000000 0.024109          -0.7363         0.46153  \n4 (77) 0.754552    1.000000 0.037715          -1.2639         0.20628  \n5 (77) 0.662688    1.000000 0.080429          -1.1894         0.23429  \n6 (77) 0.752906    1.000000 0.161217          -0.6154         0.53829  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\n\n\n\nSpatial correlogram for import_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n       estimate expectation variance standard deviate Pr(I) two sided  \n1 (77) 1.093830    1.000000 0.015550           0.7524         0.45178  \n2 (76) 0.963555    1.000000 0.011326          -0.3425         0.73201  \n3 (77) 1.024622    1.000000 0.012439           0.2208         0.82528  \n4 (77) 0.967850    1.000000 0.018660          -0.2354         0.81393  \n5 (77) 1.226193    1.000000 0.038100           1.1588         0.24653  \n6 (77) 1.648729    1.000000 0.075283           2.3644         0.01806 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\nCode\npar(mfrow=c(2,3))\nfor (year in yr){\n  GC_corr &lt;- sp.correlogram(\n    nb,\n    export_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2),\n    order = 6,\n    method=\"C\", \n    style=\"W\",\n    zero.policy = TRUE) # handle Phuket, an isolated province\n  plot(GC_corr, main = paste(year, \"export_cases\"))\n  print(GC_corr)}\n\n\nSpatial correlogram for export_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n       estimate expectation variance standard deviate Pr(I) two sided   \n1 (77) 1.059393    1.000000 0.019265           0.4279          0.6687   \n2 (76) 0.960370    1.000000 0.014316          -0.3312          0.7405   \n3 (77) 1.021797    1.000000 0.016133           0.1716          0.8637   \n4 (77) 0.978973    1.000000 0.024692          -0.1338          0.8936   \n5 (77) 0.973676    1.000000 0.051500          -0.1160          0.9077   \n6 (77) 1.946839    1.000000 0.102487           2.9576          0.0031 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for export_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided\n1 (77) 0.9382775   1.0000000 0.0123631          -0.5551          0.5788\n2 (76) 1.0007909   1.0000000 0.0087605           0.0084          0.9933\n3 (77) 1.0236243   1.0000000 0.0092691           0.2454          0.8062\n4 (77) 0.9199682   1.0000000 0.0134833          -0.6892          0.4907\n5 (77) 0.9497646   1.0000000 0.0266022          -0.3080          0.7581\n6 (77) 0.8831825   1.0000000 0.0519402          -0.5126          0.6082\n\n\nSpatial correlogram for export_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n       estimate expectation variance standard deviate Pr(I) two sided    \n1 (77) 0.667707    1.000000 0.014607          -2.7494        0.005971 ** \n2 (76) 0.590160    1.000000 0.010567          -3.9869       6.694e-05 ***\n3 (77) 0.791347    1.000000 0.011501          -1.9456        0.051705 .  \n4 (77) 0.805151    1.000000 0.017128          -1.4888        0.136537    \n5 (77) 0.930226    1.000000 0.034699          -0.3746        0.707980    \n6 (77) 0.964470    1.000000 0.068378          -0.1359        0.891920    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSpatial correlogram for export_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided\n1 (77) 1.0626253   1.0000000 0.0131094           0.5470          0.5844\n2 (76) 1.0194888   1.0000000 0.0093612           0.2014          0.8404\n3 (77) 0.8977201   1.0000000 0.0100113          -1.0222          0.3067\n4 (77) 1.0221411   1.0000000 0.0146953           0.1826          0.8551\n5 (77) 0.9263348   1.0000000 0.0292944          -0.4304          0.6669\n6 (77) 0.8262667   1.0000000 0.0574057          -0.7251          0.4684\n\n\nSpatial correlogram for export_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided\n1 (77) 0.9808435   1.0000000 0.0103786          -0.1880          0.8508\n2 (76) 1.0003824   1.0000000 0.0071631           0.0045          0.9964\n3 (77) 0.8762922   1.0000000 0.0072953          -1.4484          0.1475\n4 (77) 0.9750185   1.0000000 0.0102602          -0.2466          0.8052\n5 (77) 0.8527969   1.0000000 0.0194425          -1.0557          0.2911\n6 (77) 0.9438121   1.0000000 0.0374049          -0.2905          0.7714\n\n\n\n\n\n\n\n\n\nSpatial correlogram for export_cases %&gt;% filter(fiscal_year == year) %&gt;% dplyr::pull(2) \nmethod: Geary's C\n       estimate expectation variance standard deviate Pr(I) two sided   \n1 (77) 1.098305    1.000000 0.034456           0.5296        0.596392   \n2 (76) 0.886452    1.000000 0.026543          -0.6970        0.485832   \n3 (77) 1.154979    1.000000 0.031243           0.8768        0.380596   \n4 (77) 1.292731    1.000000 0.049365           1.3175        0.187661   \n5 (77) 1.459443    1.000000 0.106306           1.4091        0.158796   \n6 (77) 2.192125    1.000000 0.213752           2.5785        0.009923 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\nRemember to handle the years with no cases\n\n\nCode\npar(mfrow=c(2,3))\nfor (year in yr){\n  cases = conspiracy_cases %&gt;% filter(fiscal_year==year) %&gt;% dplyr::pull(2)\n  \n    # checks if the year's vector has no_case = 0\n  if (sum(cases)==0) {\n    message(paste(\"Skipping year\", year, \"due to empty data (0 cases)\"))\n    next  # continue to next iteration\n  }\n  \n  GC_corr &lt;- sp.correlogram(\n    nb,\n    cases,\n    order = 6,\n    method=\"C\", \n    style=\"W\",\n    zero.policy = TRUE) # handle Phuket, an isolated province\n  plot(GC_corr, main = paste(year, \"conspiracy_cases\"))\n  print(GC_corr)}\n\n\nSpatial correlogram for cases \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided\n1 (77) 0.9139050   1.0000000 0.0104830          -0.8409          0.4004\n2 (76) 0.9221307   1.0000000 0.0072472          -0.9147          0.3603\n3 (77) 1.1159238   1.0000000 0.0073991           1.3477          0.1778\n4 (77) 0.8985914   1.0000000 0.0104298          -0.9930          0.3207\n5 (77) 0.9031464   1.0000000 0.0198192          -0.6880          0.4915\n6 (77) 1.1275210   1.0000000 0.0381696           0.6527          0.5139\n\n\nSpatial correlogram for cases \nmethod: Geary's C\n       estimate expectation variance standard deviate Pr(I) two sided\n1 (77) 0.851959    1.000000 0.014937          -1.2113          0.2258\n2 (76) 1.121384    1.000000 0.010832           1.1663          0.2435\n3 (77) 1.042988    1.000000 0.011829           0.3953          0.6927\n4 (77) 1.031040    1.000000 0.017663           0.2336          0.8153\n5 (77) 0.974864    1.000000 0.035887          -0.1327          0.8944\n6 (77) 0.882162    1.000000 0.070790          -0.4429          0.6578\n\n\nSpatial correlogram for cases \nmethod: Geary's C\n       estimate expectation variance standard deviate Pr(I) two sided\n1 (77) 1.164386    1.000000 0.036560           0.8597          0.3899\n2 (76) 1.089671    1.000000 0.028237           0.5336          0.5936\n3 (77) 0.951268    1.000000 0.033335          -0.2669          0.7895\n4 (77) 1.000735    1.000000 0.052781           0.0032          0.9974\n5 (77) 1.071845    1.000000 0.113896           0.2129          0.8314\n6 (77) 0.936610    1.000000 0.229160          -0.1324          0.8947\n\n\nSpatial correlogram for cases \nmethod: Geary's C\n       estimate expectation variance standard deviate Pr(I) two sided  \n1 (77) 1.246554    1.000000 0.014482           2.0488         0.04048 *\n2 (76) 1.004436    1.000000 0.010466           0.0434         0.96542  \n3 (77) 1.075149    1.000000 0.011377           0.7046         0.48109  \n4 (77) 0.996022    1.000000 0.016925          -0.0306         0.97561  \n5 (77) 0.928111    1.000000 0.034248          -0.3885         0.69768  \n6 (77) 0.979559    1.000000 0.067461          -0.0787         0.93727  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSkipping year 2021 due to empty data (0 cases)\n\n\nSkipping year 2022 due to empty data (0 cases)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "resources/ICEs/ex7/ice7.html",
    "href": "resources/ICEs/ex7/ice7.html",
    "title": "ICE 7: Cluster Analysis",
    "section": "",
    "text": "Lecture Notes:\n\nRather than using absolute figures for comparison during analysis, consider deriving ratios or percentages to account for external factors (e.g. compute % of observations across total population rather than abolute raw data)\nPairwise plots indicate linearity only, so if there is no correlation, it only means that the comparison variables are not linearly related, but could possibly exhibit other forms of relationship.\nChoose best optimal method (e.g. Gap Statistics) then decide how many clusters to retain\n\ngap_stat &lt;- clusGap(shan_ict, \n                    FUN = hcut, \n                    nstart = 25, \n                    K.max = 10, # modify as needed\n                    B = 50)\n\n\n\nusually look for anything after 3\n\nBeware of lone rangers, very unique/highly dissimilar values (possibly due to rare combination of attributes), consider removing (depends on context)\nconsider isolating input and output fields for prototype interface\nAlternative view of clustering\n\nParallel coordinates\n\nplotly, giraffe"
  }
]